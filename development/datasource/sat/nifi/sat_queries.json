[
    {
        "sat_management_exam_school_overall": "Select * from semester_exam_school_mgmt_all"
    },
    {
        "sat_management_exam_cluster_overall": "Select * from semester_exam_cluster_mgmt_all"
    },
    {
        "sat_management_exam_block_overall": "select * from semester_exam_block_mgmt_all"
    },
    {
        "sat_management_exam_district_overall": "Select * from semester_exam_district_mgmt_all"
    },
    {
        "sat_management_grade_school_overall": "Select * from semester_grade_school_mgmt_all"
    },
    {
        "sat_management_grade_cluster_overall": "Select * from semester_grade_cluster_mgmt_all"
    },
    {
        "sat_management_grade_block_overall": "Select * from semester_grade_block_mgmt_all"
    },
    {
        "sat_management_grade_district_overall": "Select * from semester_grade_district_mgmt_all"
    },
    {
        "sat_management_exam_school_last_30_days": "Select * from semester_exam_school_mgmt_last30"
    },
    {
        "sat_management_exam_cluster_last_30_days": "Select * from semester_exam_cluster_mgmt_last30"
    },
    {
        "sat_management_exam_block_last_30_days": "Select * from semester_exam_block_mgmt_last30"
    },
    {
        "sat_management_exam_district_last_30_days": "Select * from semester_exam_district_mgmt_last30"
    },
    {
        "sat_management_grade_school_last_30_days": "Select * from semester_grade_school_mgmt_last30"
    },
    {
        "sat_management_grade_cluster_last_30_days": "Select * from semester_grade_cluster_mgmt_last30"
    },
    {
        "sat_management_grade_block_last_30_days": "Select * from semester_grade_block_mgmt_last30"
    },
    {
        "sat_management_grade_district_last_30_days": "Select * from semester_grade_district_mgmt_last30"
    },
    {
        "sat_management_exam_school_last_7_days": "Select * from semester_exam_school_mgmt_last7"
    },
    {
        "sat_management_exam_cluster_last_7_days": "Select * from semester_exam_cluster_mgmt_last7"
    },
    {
        "sat_management_exam_block_last_7_days": "Select * from semester_exam_block_mgmt_last7"
    },
    {
        "sat_management_exam_district_last_7_days": "Select * from semester_exam_district_mgmt_last7"
    },
    {
        "sat_management_grade_school_last_7_days": "Select * from semester_grade_school_mgmt_last7"
    },
    {
        "sat_management_grade_cluster_last_7_days": "Select * from semester_grade_cluster_mgmt_last7"
    },
    {
        "sat_management_grade_block_last_7_days": "Select * from semester_grade_block_mgmt_last7"
    },
    {
        "sat_management_grade_district_last_7_days": "Select * from semester_grade_district_mgmt_last7"
    },
    {
        "sat_management_subject_all_footer_last_30_days": "select academic_year, grade, semester, json_object_agg( subject_name, json_build_object( 'total_students', total_students, 'students_attended', students_attended, 'total_schools', total_schools ) order by subject_name ) as subjects, school_management_type from( select academic_year,semester, cast('Grade ' || grade as text) as grade, cast(subject as text) as subject_name, sum(students_count) as total_students, count(distinct school_id) as total_schools, sum(students_attended) as students_attended, school_management_type from semester_exam_school_result where exam_code in  (select exam_code from sat_date_range where date_range='last30days') group by academic_year,semester, grade, subject, school_management_type order by grade desc, subject_name) as t group by grade,semester, academic_year, school_management_type order by 1, grade; "
    },
    {
        "sat_management_subject_all_footer_last_7_days": "select academic_year, grade, semester, json_object_agg( subject_name, json_build_object( 'total_students', total_students, 'students_attended', students_attended, 'total_schools', total_schools ) order by subject_name ) as subjects, school_management_type from( select academic_year,semester, cast('Grade ' || grade as text) as grade, cast(subject as text) as subject_name, sum(students_count) as total_students, count(distinct school_id) as total_schools, sum(students_attended) as students_attended, school_management_type from semester_exam_school_result where exam_code in  (select exam_code from sat_date_range where date_range='last7days') group by academic_year,semester, grade, subject, school_management_type order by grade desc, subject_name) as t group by grade,semester, academic_year, school_management_type order by 1, grade;"
    },
    {
        "sat_subject_all_footer_last_30_days": "select academic_year, grade, semester, json_object_agg( subject_name, json_build_object( 'total_students', total_students, 'students_attended', students_attended, 'total_schools', total_schools ) order by subject_name ) as subjects from( select academic_year,semester, cast('Grade ' || grade as text) as grade, cast(subject as text) as subject_name, sum(students_count) as total_students, count(distinct school_id) as total_schools, sum(students_attended) as students_attended from semester_exam_school_result where exam_code in  (select exam_code from sat_date_range where date_range='last30days') group by academic_year,semester, grade, subject order by grade desc, subject_name) as t group by grade,semester, academic_year order by 1, grade; "
    },
    {
        "sat_subject_all_footer_last_7_days": "select academic_year, grade, semester, json_object_agg( subject_name, json_build_object( 'total_students', total_students, 'students_attended', students_attended, 'total_schools', total_schools ) order by subject_name ) as subjects from( select academic_year,semester, cast('Grade ' || grade as text) as grade, cast(subject as text) as subject_name, sum(students_count) as total_students, count(distinct school_id) as total_schools, sum(students_attended) as students_attended from semester_exam_school_result where exam_code in  (select exam_code from sat_date_range where date_range='last7days') group by academic_year,semester, grade, subject order by grade desc, subject_name) as t group by grade,semester, academic_year order by 1, grade;"
    },
    {
        "sat_management_subject_footer_district_last_30_days": "select district_id,semester,school_management_type,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools', res.total_schools)) as grade from( select a.district_id,a.grade,a.semester,a.school_management_type,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.district_id,semester,sge.school_management_type,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,district_id,sge.school_id,grade,school_management_type from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,district_id,psr.semester,school_management_type from semester_exam_result_trans pert join semester_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code where psr.exam_code in (select exam_code from pat_date_range where date_range='last30days') group by studying_class,subject,psr.school_id,academic_year,district_id,psr.semester,psr.school_management_type)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class and sge.school_management_type=res.school_management_type group by sge.district_id,grade,subject,semester,sge.school_management_type) as a join (select distinct district_id,grade,students_attended,total_students,total_schools,semester,school_management_type from semester_grade_district_mgmt_last30 ) as b on a.district_id=b.district_id and a.grade=b.grade and a.semester=b.semester and a.school_management_type=b.school_management_type group by a.district_id,a.grade,a.semester,a.school_management_type)as res group by district_id,semester,school_management_type"
    },
    {
        "sat_management_subject_footer_block_last_30_days": "select block_id,semester,school_management_type,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools', res.total_schools)) as grade from( select a.block_id,a.grade,a.semester,a.school_management_type,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.block_id,semester,sge.school_management_type,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,block_id,sge.school_id,grade,school_management_type from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,block_id,psr.semester,school_management_type from semester_exam_result_trans pert join semester_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code where psr.exam_code in (select exam_code from pat_date_range where date_range='last30days') group by studying_class,subject,psr.school_id,academic_year,block_id,psr.semester,psr.school_management_type)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class and sge.school_management_type=res.school_management_type group by sge.block_id,grade,subject,semester,sge.school_management_type) as a join (select distinct block_id,grade,students_attended,total_students,total_schools,semester,school_management_type from semester_grade_block_mgmt_last30 ) as b on a.block_id=b.block_id and a.grade=b.grade and a.semester=b.semester and a.school_management_type=b.school_management_type group by a.block_id,a.grade,a.semester,a.school_management_type)as res group by block_id,semester,school_management_type "
    },
    {
        "sat_management_subject_footer_cluster_last_30_days": "select cluster_id,semester,school_management_type,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools', res.total_schools)) as grade from( select a.cluster_id,a.grade,a.semester,a.school_management_type,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.cluster_id,semester,sge.school_management_type,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,cluster_id,sge.school_id,grade,school_management_type from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,cluster_id,psr.semester,school_management_type from semester_exam_result_trans pert join semester_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code where psr.exam_code in (select exam_code from pat_date_range where date_range='last30days') group by studying_class,subject,psr.school_id,academic_year,cluster_id,psr.semester,psr.school_management_type)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class and sge.school_management_type=res.school_management_type group by sge.cluster_id,grade,subject,semester,sge.school_management_type) as a join (select distinct cluster_id,grade,students_attended,total_students,total_schools,semester,school_management_type from semester_grade_cluster_mgmt_last30 ) as b on a.cluster_id=b.cluster_id and a.grade=b.grade and a.semester=b.semester and a.school_management_type=b.school_management_type group by a.cluster_id,a.grade,a.semester,a.school_management_type)as res group by cluster_id,semester,school_management_type "
    },
    {
        "sat_management_subject_footer_school_last_30_days": "select school_id,school_management_type,semester,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools', res.total_schools)) as grade from(select a.school_id,a.grade,a.semester,a.school_management_type,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.school_id,semester,sge.school_management_type,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,sge.school_id,grade,school_management_type from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,psr.semester,school_management_type from semester_exam_result_trans pert join semester_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code where psr.exam_code in (select exam_code from pat_date_range where date_range='last30days') group by studying_class,subject,psr.school_id,academic_year,psr.semester,psr.school_management_type)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class and sge.school_management_type=res.school_management_type group by sge.school_id,grade,subject,semester,sge.school_management_type) as a join (select distinct school_id,grade,students_attended,total_students,total_schools,semester,school_management_type from semester_grade_school_mgmt_last30 ) as b on a.school_id=b.school_id and a.grade=b.grade and a.semester=b.semester and a.school_management_type=b.school_management_type group by a.school_id,a.grade,a.semester,a.school_management_type)as res group by school_id,semester,school_management_type "
    },
    {
        "sat_management_subject_footer_district_last_7_days": "select district_id,semester,school_management_type,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) as grade from( select a.district_id,a.grade,a.semester,a.school_management_type,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.district_id,semester,sge.school_management_type,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,district_id,sge.school_id,grade,school_management_type from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,district_id,psr.semester,school_management_type from semester_exam_result_trans pert join semester_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code where psr.exam_code in (select exam_code from pat_date_range where date_range='last7days') group by studying_class,subject,psr.school_id,academic_year,district_id,psr.semester,psr.school_management_type)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class and sge.school_management_type=res.school_management_type group by sge.district_id,grade,subject,semester,sge.school_management_type) as a join (select distinct district_id,grade,students_attended,total_students,total_schools,semester,school_management_type from semester_grade_district_mgmt_last7 ) as b on a.district_id=b.district_id and a.grade=b.grade and a.semester=b.semester and a.school_management_type=b.school_management_type group by a.district_id,a.grade,a.semester,a.school_management_type)as res group by district_id,semester,school_management_type "
    },
    {
        "sat_management_subject_footer_block_last_7_days": "select block_id,semester,school_management_type,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) as grade from( select a.block_id,a.grade,a.semester,a.school_management_type,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.block_id,semester,sge.school_management_type,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,block_id,sge.school_id,grade,school_management_type from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,block_id,psr.semester,school_management_type from semester_exam_result_trans pert join semester_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code where psr.exam_code in (select exam_code from pat_date_range where date_range='last7days') group by studying_class,subject,psr.school_id,academic_year,block_id,psr.semester,psr.school_management_type)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class and sge.school_management_type=res.school_management_type group by sge.block_id,grade,subject,semester,sge.school_management_type) as a join (select distinct block_id,grade,students_attended,total_students,total_schools,semester,school_management_type from semester_grade_block_mgmt_last7 ) as b on a.block_id=b.block_id and a.grade=b.grade and a.semester=b.semester and a.school_management_type=b.school_management_type group by a.block_id,a.grade,a.semester,a.school_management_type)as res group by block_id,semester,school_management_type "
    },
    {
        "sat_management_subject_footer_cluster_last_7_days": "select cluster_id,semester,school_management_type,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools', res.total_schools)) as grade from( select a.cluster_id,a.grade,a.semester,a.school_management_type,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.cluster_id,semester,sge.school_management_type,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,cluster_id,sge.school_id,grade,school_management_type from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,cluster_id,psr.semester,school_management_type from semester_exam_result_trans pert join semester_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code where psr.exam_code in (select exam_code from pat_date_range where date_range='last7days') group by studying_class,subject,psr.school_id,academic_year,cluster_id,psr.semester,psr.school_management_type)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class and sge.school_management_type=res.school_management_type group by sge.cluster_id,grade,subject,semester,sge.school_management_type) as a join (select distinct cluster_id,grade,students_attended,total_students,total_schools,semester,school_management_type from semester_grade_cluster_mgmt_last7 ) as b on a.cluster_id=b.cluster_id and a.grade=b.grade and a.semester=b.semester and a.school_management_type=b.school_management_type group by a.cluster_id,a.grade,a.semester,a.school_management_type)as res group by cluster_id,semester,school_management_type "
    },
    {
        "sat_management_subject_footer_school_last_7_days": "select school_id,school_management_type,semester,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) as grade  from( select a.school_id,a.grade,a.semester,a.school_management_type,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.school_id,semester,sge.school_management_type,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,sge.school_id,grade,school_management_type from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,psr.semester,school_management_type from semester_exam_result_trans pert join semester_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code where psr.exam_code in (select exam_code from pat_date_range where date_range='last7days') group by studying_class,subject,psr.school_id,academic_year,psr.semester,psr.school_management_type)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class and sge.school_management_type=res.school_management_type group by sge.school_id,grade,subject,semester,sge.school_management_type) as a join (select distinct school_id,grade,students_attended,total_students,total_schools,semester,school_management_type from semester_grade_school_mgmt_last7 ) as b on a.school_id=b.school_id and a.grade=b.grade and a.semester=b.semester and a.school_management_type=b.school_management_type group by a.school_id,a.grade,a.semester,a.school_management_type)as res group by school_id,semester,school_management_type "
    },
    {
        "sat_management_learning_outcome_p1_question_cluster": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,block_id,block_name,cluster_id,cluster_name,school_id,school_name,question_id as indicator_id,district_id,district_name,question_id,indicator,sum(students_attended) as students_attended,rtrim(ltrim(TO_CHAR( TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'),'Month')))as month,round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks,round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id)as total_schools,sum(total_students) as total_students,school_management_type from semester_exam_school_qst_result  where school_management_type is not null group by academic_year,grade,subject,exam_date,block_id,block_name,cluster_id,cluster_name,school_id,school_name, district_id,district_name,question_id,indicator,school_management_type order by district_id,block_id,cluster_id,school_id,question_id"
    },
    {
        "sat_management_learning_outcome_p1_question_all": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,district_id,district_name,question_id,indicator,question_id as indicator_id, sum(students_attended) as students_attended, rtrim(trim(TO_CHAR( TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month' )))as month, round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id)as total_schools,sum(total_students) as total_students,school_management_type from semester_exam_school_qst_result where school_management_type is not null group by academic_year,grade,subject,exam_date,district_id,district_name,question_id,indicator,school_management_type order by district_id,question_id "
    },
    {
        "sat_management_learning_outcome_p1_question_district": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,block_id,block_name,district_id,district_name,question_id,indicator,question_id as indicator_id, sum(students_attended) as students_attended, rtrim(ltrim(TO_CHAR( TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month' )))as month, round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id)as total_schools,sum(total_students) as total_students,school_management_type from semester_exam_school_qst_result  where school_management_type is not null group by academic_year,grade,subject,exam_date,block_id,block_name,district_id,district_name,question_id,indicator,school_management_type order by district_id,block_id,question_id "
    },
    {
        "sat_management_learning_outcome_p1_question_block": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,block_id,block_name,cluster_id,cluster_name,district_id,district_name,question_id,indicator,question_id as indicator_id, sum(students_attended) as students_attended, rtrim(ltrim(TO_CHAR( TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month' )))as month, round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id)as total_schools,sum(total_students) as total_students,school_management_type from semester_exam_school_qst_result  where school_management_type is not null group by academic_year,grade,subject,exam_date,block_id,block_name,cluster_id,cluster_name, district_id,district_name,question_id,indicator,school_management_type order by district_id,block_id,cluster_id,question_id "
    },
    {
        "sat_management_learning_outcome_p1_indicator_all": "select * from sat_mgmt_lo_p1_indicator_all order by district_id "
    },
    {
        "sat_management_learning_outcome_p1_indicator_district": "select * from sat_mgmt_lo_p1_indicator_district order by district_id,block_id "
    },
    {
        "sat_management_learning_outcome_p1_indicator_block": "select * from sat_mgmt_lo_p1_indicator_block order by district_id,block_id,cluster_id"
    },
    {
        "sat_management_learning_outcome_p1_indicator_cluster": "select * from sat_mgmt_lo_p1_indicator_cluster order by district_id,block_id,cluster_id,school_id "
    },
    {
        "sat_management_learning_outcome_p3_all": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,district_id,district_name,sum(students_attended) as students_attended, rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month,round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id)as total_schools,sum(students_count) as total_students,school_management_type from semester_exam_school_result  where school_management_type is not null group by academic_year,grade,subject,exam_date,district_id,district_name,school_management_type order by district_id,grade,subject_name "
    },
    {
        "sat_management_learning_outcome_p3_district": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,block_id,block_name,district_id,district_name, sum(students_attended) as students_attended,rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month,round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id)as total_schools,sum(students_count) as total_students,school_management_type from semester_exam_school_result  where school_management_type is not null group by academic_year,grade,subject,exam_date,block_id,block_name,district_id,district_name,school_management_type order by district_id,block_id "
    },
    {
        "sat_management_learning_outcome_p3_block": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,block_id,block_name,cluster_id,cluster_name, district_id,district_name,sum(students_attended) as students_attended,rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month, round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id)as total_schools,sum(students_count) as total_students,school_management_type from semester_exam_school_result  where school_management_type is not null group by academic_year,grade,subject,exam_date,block_id,block_name,cluster_id,cluster_name,district_id,district_name,school_management_type order by district_id,block_id,cluster_id "
    },
    {
        "sat_management_learning_outcome_p3_cluster": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date, block_id,block_name,cluster_id,cluster_name,school_id,school_name,district_id,district_name,sum(students_attended) as students_attended, rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month,round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id)as total_schools,sum(students_count) as total_students,school_management_type from semester_exam_school_result  where school_management_type is not null group by academic_year,grade,subject,exam_date,block_id,block_name,cluster_id,cluster_name,school_id,school_name,district_id,district_name,school_management_type order by district_id,block_id,cluster_id,school_id "
    },
    {
        "sat_exam_district_all": "Select * from semester_exam_district_all "
    },
    {
        "sat_grade_district_all": "Select * from semester_grade_district_all where semester=1"
    },
    {
        "sat_grade_district_all": "Select * from semester_grade_district_all where semester=2"
    },
    {
        "sat_exam_block_all": "Select * from semester_exam_block_all"
    },
    {
        "sat_grade_block_all": "Select * from semester_grade_block_all where semester=1"
    },
    {
        "sat_grade_block_all": "Select * from semester_grade_block_all where semester=2"
    },
    {
        "sat_exam_cluster_all": "Select * from semester_exam_cluster_all"
    },
    {
        "sat_grade_cluster_all": "Select * from semester_grade_cluster_all where semester=1"
    },
    {
        "sat_grade_cluster_all": "Select * from semester_grade_cluster_all where semester=2"
    },
    {
        "sat_exam_school_all": "Select * from semester_exam_school_all"
    },
    {
        "sat_grade_school_all": "Select * from semester_grade_school_all where semester=1"
    },
    {
        "sat_grade_school_all": "Select * from semester_grade_school_all where semester=2"
    },
    {
        "sat_meta_all": "select json_object_agg(col,data) from ((select 'district' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from semester_grade_district_all group by grade)as d)union(select 'block' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from semester_grade_block_all group by grade)as d) union (select 'cluster' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from semester_grade_cluster_all group by grade)as d)union(select 'school' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from semester_grade_school_all group by grade)as d))as d"
    },
    {
        "sat_meta_semester_all": "select distinct concat('sem_',semester) as id, concat('Semester ',semester) as name,academic_year from semester_exam_district_all;"
    },
    {
        "sat_exam_district_last30": "Select * from semester_exam_district_last30"
    },
    {
        "sat_grade_district_last30": "Select * from semester_grade_district_last30 where semester=1"
    },
    {
        "sat_grade_district_last30": "Select * from semester_grade_district_last30 where semester=2"
    },
    {
        "sat_exam_block_last30": "Select * from semester_exam_block_last30"
    },
    {
        "sat_grade_block_last30": "Select * from semester_grade_block_last30 where semester=1"
    },
    {
        "sat_grade_block_last30": "Select * from semester_grade_block_last30 where semester=2"
    },
    {
        "sat_exam_cluster_last30": "Select * from semester_exam_cluster_last30"
    },
    {
        "sat_grade_cluster_last30": "Select * from semester_grade_cluster_last30 where semester=1"
    },
    {
        "sat_grade_cluster_last30": "Select * from semester_grade_cluster_last30 where semester=2"
    },
    {
        "sat_exam_school_last30": "Select * from semester_exam_school_last30"
    },
    {
        "sat_grade_school_last30": "Select * from semester_grade_school_last30"
    },
    {
        "sat_grade_school_last30": "Select * from semester_grade_school_last30 where semester=1"
    },
    {
        "sat_grade_school_last30": "Select * from semester_grade_school_last30 where semester=2"
    },
    {
        "sat_meta_last30": "select json_object_agg(col,data) from  ((select 'district' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from semester_grade_district_all group by grade)as d) union (select 'block' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from semester_grade_block_all group by grade)as d) union (select 'cluster' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from semester_grade_cluster_all group by grade)as d) union (select 'school' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from semester_grade_school_all group by grade)as d))as d"
    },
    {
        "sat_meta_semester_last30": "select distinct concat('sem_',semester) as id, concat('Semester ',semester) as name,academic_year from semester_exam_district_last30;"
    },
    {
        "sat_exam_district_last7": "Select * from semester_exam_district_last7"
    },
    {
        "sat_grade_district_last7": "Select * from semester_grade_district_last7 where semester=1"
    },
    {
        "sat_grade_district_last7": "Select * from semester_grade_district_last7 where semester=2"
    },
    {
        "sat_exam_block_last7": "Select * from semester_exam_block_last7"
    },
    {
        "sat_grade_block_last7": "Select * from semester_grade_block_last7 where semester=1"
    },
    {
        "sat_grade_block_last7": "Select * from semester_grade_block_last7 where semester=2"
    },
    {
        "sat_exam_cluster_last7": "Select * from semester_exam_cluster_last7"
    },
    {
        "sat_grade_cluster_last7": "Select * from semester_grade_cluster_last7 where semester=1"
    },
    {
        "sat_grade_cluster_last7": "Select * from semester_grade_cluster_last7 where semester=2"
    },
    {
        "sat_exam_school_last7": "Select * from semester_exam_school_last7"
    },
    {
        "sat_grade_school_last7": "Select * from semester_grade_school_last7 where semester=1"
    },
    {
        "sat_grade_school_last7": "Select * from semester_grade_school_last7 where semester=2"
    },
    {
        "sat_meta_last7": "select json_object_agg(col,data) from  ((select 'district' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from semester_grade_district_all group by grade)as d) union (select 'block' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from semester_grade_block_all group by grade)as d) union (select 'cluster' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from semester_grade_cluster_all group by grade)as d) union (select 'school' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from semester_grade_school_all group by grade)as d))as d"
    },
    {
        "sat_meta_semester_last7": "select distinct concat('sem_',semester) as id, concat('Semester ',semester) as name,academic_year from semester_exam_district_last7;"
    },
    {
        "sat_meta_by_year_semester":"select academic_year,jsonb_agg(semester) as semester from (select academic_year,json_build_object('id',a.id,'name',a.name) as semester from (select distinct academic_year,concat('sem_',semester)as id,concat('Semester ',semester)as name from semester_exam_school_result where semester is not null order by academic_year) as a group by academic_year,id,name) as b group by academic_year"
    },
    {
        "sat_subject_footer_district_last_30_days": "select district_id,semester,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) as grade from( select a.district_id,a.grade,a.semester,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.district_id,semester,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,district_id,sge.school_id,grade from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,district_id,psr.semester from semester_exam_result_trans pert join semester_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code where psr.exam_code in (select exam_code from pat_date_range where date_range='last30days') group by studying_class,subject,psr.school_id,academic_year,district_id,psr.semester)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class group by sge.district_id,grade,subject,semester) as a join (select distinct district_id,grade,students_attended,total_students,total_schools,semester from semester_grade_district_last30 ) as b on a.district_id=b.district_id and a.grade=b.grade and a.semester=b.semester group by a.district_id,a.grade,a.semester)as res group by district_id,semester "
    },
    {
        "sat_subject_footer_block_last_30_days": "select block_id,semester,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) as grade from( select a.block_id,a.grade,a.semester,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.block_id,semester,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,block_id,sge.school_id,grade from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,block_id,psr.semester from semester_exam_result_trans pert join semester_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code where psr.exam_code in (select exam_code from pat_date_range where date_range='last30days') group by studying_class,subject,psr.school_id,academic_year,block_id,psr.semester)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class group by sge.block_id,grade,subject,semester) as a join (select distinct block_id,grade,students_attended,total_students,total_schools,semester from semester_grade_block_last30 ) as b on a.block_id=b.block_id and a.grade=b.grade and a.semester=b.semester group by a.block_id,a.grade,a.semester)as res group by block_id,semester "
    },
    {
        "sat_subject_footer_cluster_last_30_days": "select cluster_id,semester,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) as grade from( select a.cluster_id,a.grade,a.semester,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.cluster_id,semester,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,cluster_id,sge.school_id,grade from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,cluster_id,psr.semester from semester_exam_result_trans pert join semester_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code where psr.exam_code in (select exam_code from pat_date_range where date_range='last30days') group by studying_class,subject,psr.school_id,academic_year,cluster_id,psr.semester)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class group by sge.cluster_id,grade,subject,semester) as a join (select distinct cluster_id,grade,students_attended,total_students,total_schools,semester from semester_grade_cluster_last30 ) as b on a.cluster_id=b.cluster_id and a.grade=b.grade and a.semester=b.semester group by a.cluster_id,a.grade,a.semester)as res group by cluster_id,semester "
    },
    {
        "sat_subject_footer_school_last_30_days": "select school_id,semester,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) as grade from( select a.school_id,a.grade,a.semester,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.school_id,semester,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,sge.school_id,grade from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,psr.semester from semester_exam_result_trans pert join semester_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code where psr.exam_code in (select exam_code from pat_date_range where date_range='last30days') group by studying_class,subject,psr.school_id,academic_year,psr.semester)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class group by sge.school_id,grade,subject,semester) as a join (select distinct school_id,grade,students_attended,total_students,total_schools,semester from semester_grade_school_last30 ) as b on a.school_id=b.school_id and a.grade=b.grade and a.semester=b.semester group by a.school_id,a.grade,a.semester)as res group by school_id,semester "
    },
    {
        "sat_subject_footer_district_last_7_days": "select district_id,semester,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) as grade from( select a.district_id,a.grade,a.semester,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.district_id,semester,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,district_id,sge.school_id,grade from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,district_id,psr.semester from semester_exam_result_trans pert join semester_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code where psr.exam_code in (select exam_code from pat_date_range where date_range='last7days') group by studying_class,subject,psr.school_id,academic_year,district_id,psr.semester)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class group by sge.district_id,grade,subject,semester) as a join (select distinct district_id,grade,students_attended,total_students,total_schools,semester from semester_grade_district_last7 ) as b on a.district_id=b.district_id and a.grade=b.grade and a.semester=b.semester group by a.district_id,a.grade,a.semester)as res group by district_id,semester "
    },
    {
        "sat_subject_footer_block_last_7_days": "select block_id,semester,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) as grade from( select a.block_id,a.grade,a.semester,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.block_id,semester,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,block_id,sge.school_id,grade from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,block_id,psr.semester from semester_exam_result_trans pert join semester_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code where psr.exam_code in (select exam_code from pat_date_range where date_range='last7days') group by studying_class,subject,psr.school_id,academic_year,block_id,psr.semester)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class group by sge.block_id,grade,subject,semester) as a join (select distinct block_id,grade,students_attended,total_students,total_schools,semester from semester_grade_block_last7 ) as b on a.block_id=b.block_id and a.grade=b.grade and a.semester=b.semester group by a.block_id,a.grade,a.semester)as res group by block_id,semester "
    },
    {
        "sat_subject_footer_cluster_last_7_days": "select cluster_id,semester,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) as grade from( select a.cluster_id,a.grade,a.semester,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.cluster_id,semester,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,cluster_id,sge.school_id,grade from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,cluster_id,psr.semester from semester_exam_result_trans pert join semester_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code where psr.exam_code in (select exam_code from pat_date_range where date_range='last7days') group by studying_class,subject,psr.school_id,academic_year,cluster_id,psr.semester)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class group by sge.cluster_id,grade,subject,semester) as a join (select distinct cluster_id,grade,students_attended,total_students,total_schools,semester from semester_grade_cluster_last7 ) as b on a.cluster_id=b.cluster_id and a.grade=b.grade and a.semester=b.semester group by a.cluster_id,a.grade,a.semester)as res group by cluster_id,semester "
    },
    {
        "sat_subject_footer_school_last_7_days": "select school_id,semester,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) as grade from( select a.school_id,a.grade,a.semester,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.school_id,semester,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,sge.school_id,grade from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,psr.semester from semester_exam_result_trans pert join semester_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code where psr.exam_code in (select exam_code from pat_date_range where date_range='last7days') group by studying_class,subject,psr.school_id,academic_year,psr.semester)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class group by sge.school_id,grade,subject,semester) as a join (select distinct school_id,grade,students_attended,total_students,total_schools,semester from semester_grade_school_last7 ) as b on a.school_id=b.school_id and a.grade=b.grade and a.semester=b.semester group by a.school_id,a.grade,a.semester)as res group by school_id,semester "
    },
    {
        "sat_learning_outcome_p1_question_meta": "select replace(json_agg(sat_meta)::text,'\\','') as sat_meta from (select json_build_object('academic_year',academic_year,'data',json_object_agg(col,data))as sat_meta from (select 'months' as col,data::text,academic_year from (select json_object_agg(month,data) as data,academic_year from (select json_object_agg(col,data)as data,academic_year,rtrim(ltrim(month))as month from (select 'examDate' as col,json_agg(json_build_object('exam_date',exam_date))::jsonb as data,academic_year,month from (select to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,academic_year,TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month') as month from semester_exam_school_qst_result group by exam_date,academic_year)as d group by academic_year,month)as a group by month,academic_year order by to_date(month,'Month'))as a group by academic_year)as d union (select 'grades' as col,json_agg(json_build_object('grade',grade))::text as data,academic_year from (select grade,academic_year from semester_exam_school_qst_result group by grade,academic_year)as d group by academic_year) union (select 'subjects' as col,json_agg(json_build_object('subject',subject))::text as data,academic_year from (select subject,academic_year from semester_exam_school_qst_result group by subject,academic_year)as d group by academic_year))as d group by academic_year)as org"
    },
    {
        "sat_learning_outcome_p1_question_cluster": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,block_id,block_name,cluster_id,cluster_name,school_id,school_name,question_id as indicator_id,district_id,district_name,question_id,indicator,sum(students_attended) as students_attended, rtrim(ltrim(TO_CHAR( TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month' )))as month, round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks,round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id)as total_schools,sum(total_students) as total_students from semester_exam_school_qst_result group by academic_year,grade,subject,exam_date,block_id,block_name,cluster_id,cluster_name,school_id,school_name, district_id,district_name,question_id,indicator order by district_id,block_id,cluster_id,school_id,question_id"
    },
    {
        "sat_learning_outcome_p1_question_all": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,district_id,district_name,question_id,indicator,question_id as indicator_id, sum(students_attended) as students_attended, rtrim(trim(TO_CHAR( TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month' )))as month, round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id)as total_schools,sum(total_students) as total_students from semester_exam_school_qst_result group by academic_year,grade,subject,exam_date,district_id,district_name,question_id,indicator order by district_id,question_id "
    },
    {
        "sat_learning_outcome_p1_question_district": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,block_id,block_name,district_id,district_name,question_id,indicator,question_id as indicator_id, sum(students_attended) as students_attended, rtrim(ltrim(TO_CHAR( TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month' )))as month, round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id)as total_schools,sum(total_students) as total_students from semester_exam_school_qst_result group by academic_year,grade,subject,exam_date,block_id,block_name,district_id,district_name,question_id,indicator order by district_id,block_id,question_id "
    },
    {
        "sat_learning_outcome_p1_question_block": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,block_id,block_name,cluster_id,cluster_name,district_id,district_name,question_id,indicator,question_id as indicator_id, sum(students_attended) as students_attended, rtrim(ltrim(TO_CHAR( TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month' )))as month, round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id)as total_schools,sum(total_students) as total_students from semester_exam_school_qst_result group by academic_year,grade,subject,exam_date,block_id,block_name,cluster_id,cluster_name, district_id,district_name,question_id,indicator order by district_id,block_id,cluster_id,question_id "
    },
    {
        "sat_learning_outcome_p1_indicator_all": "select * from sat_lo_p1_indicator_all order by district_id"
    },
    {
        "sat_learning_outcome_p1_indicator_district": "select * from sat_lo_p1_indicator_district order by district_id,block_id"
    },
    {
        "sat_learning_outcome_p1_indicator_block": "select * from sat_lo_p1_indicator_block order by district_id,block_id,cluster_id"
    },
    {
        "sat_learning_outcome_p1_indicator_cluster": "select * from sat_lo_p1_indicator_cluster order by district_id,block_id,cluster_id,school_id"
    },
    {
        "sat_learning_outcome_p3_meta": "select replace(json_agg(sat_meta)::text,'\\','') as sat_meta from (select json_build_object('academic_year',academic_year,'data',json_object_agg(col,data))as sat_meta from (select 'months' as col,data::text,academic_year from (select json_object_agg(month,data) as data,academic_year from (select json_object_agg(col,data)as data,academic_year,rtrim(ltrim(month))as month from (select 'examDate' as col,json_agg(json_build_object('exam_date',exam_date))::jsonb as data,academic_year,month from (select to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,academic_year,TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month') as month from semester_exam_school_qst_result group by exam_date,academic_year)as d group by academic_year,month)as a group by month,academic_year order by to_date(month,'Month'))as a group by academic_year)as d union (select 'grades' as col,json_agg(json_build_object('grade',grade))::text as data,academic_year from (select grade,academic_year from semester_exam_school_qst_result group by grade,academic_year)as d group by academic_year) union (select 'subjects' as col,json_agg(json_build_object('subject',subject))::text as data,academic_year from (select subject,academic_year from semester_exam_school_qst_result group by subject,academic_year)as d group by academic_year))as d group by academic_year)as org"
    },
    {
        "sat_learning_outcome_p3_all": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,district_id,district_name,sum(students_attended) as students_attended, rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month,round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id)as total_schools,sum(students_count) as total_students from semester_exam_school_result group by academic_year,grade,subject,exam_date,district_id,district_name order by district_id,grade,subject_name "
    },
    {
        "sat_learning_outcome_p3_district": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,block_id,block_name,district_id,district_name, sum(students_attended) as students_attended,rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month,round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id)as total_schools,sum(students_count) as total_students from semester_exam_school_result group by academic_year,grade,subject,exam_date,block_id,block_name,district_id,district_name order by district_id,block_id "
    },
    {
        "sat_learning_outcome_p3_block": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,block_id,block_name,cluster_id,cluster_name, district_id,district_name,sum(students_attended) as students_attended,rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month, round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id)as total_schools,sum(students_count) as total_students from semester_exam_school_result group by academic_year,grade,subject,exam_date,block_id,block_name,cluster_id,cluster_name,district_id,district_name order by district_id,block_id,cluster_id "
    },
    {
        "sat_learning_outcome_p3_cluster": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date, block_id,block_name,cluster_id,cluster_name,school_id,school_name,district_id,district_name,sum(students_attended) as students_attended, rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month,round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id)as total_schools,sum(students_count) as total_students from semester_exam_school_result group by academic_year,grade,subject,exam_date,block_id,block_name,cluster_id,cluster_name,school_id,school_name,district_id,district_name order by district_id,block_id,cluster_id,school_id "
    },
    {
        "sat_exception_district_all": "select a.district_latitude,a.district_longitude,a.district_id,a.district_name,b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data, round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data,semester from (select district_id ,district_name,district_latitude,district_longitude,Count(DISTINCT(school_id)) AS total_schools_not_received,semester from sat_exception_data_all group by district_id,district_name,district_latitude,district_longitude,semester) as a join (select district_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by district_id)as b on a.district_id=b.district_id "
    },
    {
        "sat_exception_block_all": "select a.block_latitude,a.block_longitude,a.district_id,a.district_name,a.block_id,a.block_name,b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data, round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data,semester from (select district_id ,district_name,block_id,block_name,block_latitude,block_longitude,Count(DISTINCT(school_id)) AS total_schools_not_received,semester from sat_exception_data_all group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,semester) as a join (select block_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by block_id)as b on a.block_id=b.block_id "
    },
    {
        "sat_exception_cluster_all": "select a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.cluster_id,a.cluster_name,b.total_schools, a.total_schools_not_received as Total_schools_with_missing_data, round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data,semester from (select district_id ,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude, Count(DISTINCT(school_id)) AS total_schools_not_received,semester from sat_exception_data_all group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,semester) as a join (select cluster_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by cluster_id)as b on a.cluster_id=b.cluster_id "
    },
    {
        "sat_exception_school_all": "select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name, Count(DISTINCT(school_id)) AS Total_schools_with_missing_data,semester from sat_exception_data_all group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,semester "
    },
    {
        "sat_exception_district_last_7_days": "select a.district_latitude,a.district_longitude,a.district_id,a.district_name,b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data, round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data,semester from (select district_id ,district_name,district_latitude,district_longitude,semester, Count(DISTINCT(school_id)) AS total_schools_not_received from sat_exception_data_last7 group by district_id,district_name,district_latitude,district_longitude,semester)as a join (select district_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by district_id)as b on a.district_id=b.district_id "
    },
    {
        "sat_exception_block_last_7_days": "select a.block_latitude,a.block_longitude,a.district_id,a.district_name,a.block_id,a.block_name,b.total_schools, a.total_schools_not_received as Total_schools_with_missing_data, round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data,semester from (select district_id ,district_name,block_id,block_name,block_latitude,block_longitude,Count(DISTINCT(school_id)) AS total_schools_not_received,semester from sat_exception_data_last7 group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,semester)as a join (select block_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by block_id)as b on a.block_id=b.block_id "
    },
    {
        "sat_exception_cluster_last_7_days": "select a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.cluster_id,a.cluster_name,b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data, round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data,semester from (select district_id ,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,semester, Count(DISTINCT(school_id)) AS total_schools_not_received from sat_exception_data_last7 group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,semester) as a join (select cluster_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by cluster_id)as b on a.cluster_id=b.cluster_id "
    },
    {
        "sat_exception_school_last_7_days": "select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name, Count(DISTINCT(school_id)) AS Total_schools_with_missing_data,semester from sat_exception_data_last7 group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,semester "
    },
    {
        "sat_exception_district_last_30_days": "select a.district_latitude,a.district_longitude,a.district_id,a.district_name,b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data, round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data,semester from (select district_id ,district_name,district_latitude,district_longitude,semester, Count(DISTINCT(school_id)) AS total_schools_not_received from sat_exception_data_last30 group by district_id,district_name,district_latitude,district_longitude,semester)as a join (select district_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by district_id)as b on a.district_id=b.district_id "
    },
    {
        "sat_exception_block_last_30_days": "select a.block_latitude,a.block_longitude,a.district_id,a.district_name,a.block_id,a.block_name,b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data, round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data,semester from (select district_id ,district_name,block_id,block_name,block_latitude,block_longitude,semester, Count(DISTINCT(school_id)) AS total_schools_not_received from sat_exception_data_last30 group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,semester)as a join (select block_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by block_id)as b on a.block_id=b.block_id "
    },
    {
        "sat_exception_cluster_last_30_days": "select a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.cluster_id,a.cluster_name, b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data, round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data,semester from (select district_id ,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,semester, Count(DISTINCT(school_id)) AS total_schools_not_received from sat_exception_data_last30 group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,semester)as a join (select cluster_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by cluster_id)as b on a.cluster_id=b.cluster_id "
    },
    {
        "sat_exception_school_last_30_days": "select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,semester, Count(DISTINCT(school_id)) AS Total_schools_with_missing_data from sat_exception_data_last30 group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,semester "
    },
    {
        "sat_exception_grade_district_all": "select s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade,s.semester, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.semester,a.district_latitude,a.district_longitude,a.district_id,a.district_name,a.grade,a.subject,a.total_schools,a.total_schools_not_received as Total_schools_with_missing_data, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data, total_schools_sub,total_schools_not_received_sub from ((select a.semester,a.district_id,district_name,district_latitude,district_longitude,a.grade,subject,0 as total_schools_not_received,NULL as total_schools, total_schools_not_received_sub,total_schools_sub from(select semester,district_id,district_name,district_latitude,district_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from sat_exception_grade_data_all where subject !='grade' group by district_id,district_name,district_latitude,district_longitude,grade,subject,semester) as a inner join  ( select district_id,count(distinct(shd.school_id)) as total_schools_sub,concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by district_id,sg.grade) as b on a.district_id=b.district_id and a.grade=b.grade) union (select c.semester,c.district_id,district_name,district_latitude,district_longitude,c.grade,subject,total_schools_with_missing_data_grade as total_schools_not_received, total_schools,0 as total_schools_not_received_sub, Null as total_schools_sub from(select semester,district_id,district_name,district_latitude,district_longitude,grade,subject,Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from sat_exception_grade_data_all where subject ='grade' group by district_id,district_name,district_latitude,district_longitude,grade,subject,semester)as c inner join ( select district_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by district_id,sg.grade)as d on c.district_id = d.district_id and c.grade=d.grade))as a)as s group by s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade,s.semester "
    },
    {
        "sat_exception_grade_block_all": "select s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade,s.semester, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.semester,a.block_latitude,a.block_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.grade,a.subject,total_schools_not_received_sub,total_schools_sub ,a.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data from ( (select a.semester,district_id,district_name,a.block_id,block_name,block_latitude,block_longitude,a.grade,subject,0 as total_schools_not_received,NULL as total_schools, total_schools_not_received_sub,total_schools_sub from (select semester,district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from sat_exception_grade_data_all where subject !='grade' group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject,semester) as a inner join  (select block_id,count(distinct(shd.school_id)) as total_schools_sub, concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by block_id,sg.grade) as b on a.block_id = b.block_id and a.grade=b.grade) union (select c.semester,district_id,district_name,c.block_id,block_name,block_latitude,block_longitude,c.grade,subject,total_schools_with_missing_data_grade as total_schools_not_received, total_schools,0 as total_schools_not_received_sub,Null as total_schools_sub from(select semester,district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject, Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from sat_exception_grade_data_all where subject ='grade' group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject,semester)as c inner join (select block_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by block_id,sg.grade)as d on c.block_id = d.block_id and c.grade=d.grade))as a)as s group by s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade,s.semester "
    },
    {
        "sat_exception_grade_cluster_all": "select s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade,s.semester, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools',total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.semester,a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id, a.block_name,a.cluster_id,a.cluster_name,a.grade,a.subject,a.total_schools, a.total_schools_not_received as Total_schools_with_missing_data,total_schools_not_received_sub,total_schools_sub, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data from ((select a.semester,district_id,district_name,block_id,block_name,a.cluster_id,cluster_name,cluster_latitude,cluster_longitude,a.grade,subject,0 as total_schools_not_received, Null as total_schools,total_schools_not_received_sub,total_schools_sub from( select semester,district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from sat_exception_grade_data_all where subject !='grade' group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject,semester) as a inner join (select cluster_id,count(distinct(shd.school_id)) as total_schools_sub, concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by cluster_id,sg.grade) as b on a.cluster_id = b.cluster_id and a.grade=b.grade) union (select c.semester,district_id,district_name,block_id,block_name,c.cluster_id,cluster_name,cluster_latitude,cluster_longitude,c.grade,subject, total_schools_with_missing_data_grade as total_schools_not_received,total_schools, 0 as total_schools_not_received_sub,NULL as total_schools_sub from (select semester,district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject, Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from sat_exception_grade_data_all where subject ='grade' group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject,semester)as c inner join (select cluster_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by cluster_id,sg.grade)as d on c.cluster_id = d.cluster_id and c.grade=d.grade))as a)as s group by s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade,s.semester "
    },
    {
        "sat_exception_grade_school_all": "select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,semester, sum(Total_schools_with_missing_data) as Total_schools_with_missing_data,sum(total_schools) as total_schools, round(cast(sum(s.Total_schools_with_missing_data) as numeric)/ coalesce(cast(sum(case when total_schools=0 then NULL else total_schools end) as numeric),1)*100.0,2)  as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub, 'total_schools_with_missing_data', Total_schools_with_missing_data_sub))) as subjects from ((select distinct semester,school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,subject, 0 as Total_schools_with_missing_data,0 as total_schools, Count(DISTINCT(school_id)) AS Total_schools_with_missing_data_sub,Count(DISTINCT(school_id)) AS total_schools_sub from sat_exception_grade_data_all where subject!='grade' group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,grade,subject,semester) union (select distinct semester,school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade, 'grade' as subject, Count(DISTINCT(school_id)) AS Total_schools_with_missing_data, Count(DISTINCT(school_id)) AS total_schools,0 as Total_schools_with_missing_data_sub,0 as total_schools_sub from sat_exception_grade_data_all where subject ='grade' group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,grade,semester))as s group by school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,semester"
    },
    {
        "sat_exception_grade_district_last_7_days": "select s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade,s.semester, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.semester,a.district_latitude,a.district_longitude,a.district_id,a.district_name,a.grade,a.subject,a.total_schools,a.total_schools_not_received as Total_schools_with_missing_data, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data, total_schools_sub,total_schools_not_received_sub from ((select a.semester,a.district_id,district_name,district_latitude,district_longitude,a.grade,subject,0 as total_schools_not_received,NULL as total_schools, total_schools_not_received_sub,total_schools_sub from(select semester,district_id,district_name,district_latitude,district_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from sat_exception_grade_data_last7 where subject !='grade' group by district_id,district_name,district_latitude,district_longitude,grade,subject,semester) as a inner join  ( select district_id,count(distinct(shd.school_id)) as total_schools_sub,concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by district_id,sg.grade) as b on a.district_id=b.district_id and a.grade=b.grade) union (select c.semester,c.district_id,district_name,district_latitude,district_longitude,c.grade,subject,total_schools_with_missing_data_grade as total_schools_not_received, total_schools,0 as total_schools_not_received_sub, Null as total_schools_sub from(select semester,district_id,district_name,district_latitude,district_longitude,grade,subject,Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from sat_exception_grade_data_last7 where subject ='grade' group by district_id,district_name,district_latitude,district_longitude,grade,subject,semester)as c inner join ( select district_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by district_id,sg.grade)as d on c.district_id = d.district_id and c.grade=d.grade))as a)as s group by s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade,s.semester "
    },
    {
        "sat_exception_grade_block_last_7_days": "select s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade,s.semester, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.semester,a.block_latitude,a.block_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.grade,a.subject,total_schools_not_received_sub,total_schools_sub ,a.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data from ( (select a.semester,district_id,district_name,a.block_id,block_name,block_latitude,block_longitude,a.grade,subject,0 as total_schools_not_received,NULL as total_schools, total_schools_not_received_sub,total_schools_sub from (select semester,district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from sat_exception_grade_data_last7 where subject !='grade' group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject,semester) as a inner join  (select block_id,count(distinct(shd.school_id)) as total_schools_sub, concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by block_id,sg.grade) as b on a.block_id = b.block_id and a.grade=b.grade) union (select c.semester,district_id,district_name,c.block_id,block_name,block_latitude,block_longitude,c.grade,subject,total_schools_with_missing_data_grade as total_schools_not_received, total_schools,0 as total_schools_not_received_sub,Null as total_schools_sub from(select semester,district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject, Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from sat_exception_grade_data_last7 where subject ='grade' group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject,semester)as c inner join (select block_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by block_id,sg.grade)as d on c.block_id = d.block_id and c.grade=d.grade))as a)as s group by s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade,s.semester "
    },
    {
        "sat_exception_grade_cluster_last_7_days": "select s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade,s.semester, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools',total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.semester,a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id, a.block_name,a.cluster_id,a.cluster_name,a.grade,a.subject,a.total_schools, a.total_schools_not_received as Total_schools_with_missing_data,total_schools_not_received_sub,total_schools_sub, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data from ((select a.semester,district_id,district_name,block_id,block_name,a.cluster_id,cluster_name,cluster_latitude,cluster_longitude,a.grade,subject,0 as total_schools_not_received, Null as total_schools,total_schools_not_received_sub,total_schools_sub from( select semester,district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from sat_exception_grade_data_last7 where subject !='grade' group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject,semester) as a inner join (select cluster_id,count(distinct(shd.school_id)) as total_schools_sub, concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by cluster_id,sg.grade) as b on a.cluster_id = b.cluster_id and a.grade=b.grade) union (select c.semester,district_id,district_name,block_id,block_name,c.cluster_id,cluster_name,cluster_latitude,cluster_longitude,c.grade,subject, total_schools_with_missing_data_grade as total_schools_not_received,total_schools, 0 as total_schools_not_received_sub,NULL as total_schools_sub from (select semester,district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject, Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from sat_exception_grade_data_last7 where subject ='grade' group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject,semester)as c inner join (select cluster_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by cluster_id,sg.grade)as d on c.cluster_id = d.cluster_id and c.grade=d.grade))as a)as s group by s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade,s.semester "
    },
    {
        "sat_exception_grade_school_last_7_days": "select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,semester, sum(Total_schools_with_missing_data) as Total_schools_with_missing_data,sum(total_schools) as total_schools, round(cast(sum(s.Total_schools_with_missing_data) as numeric)/ coalesce(cast(sum(case when total_schools=0 then NULL else total_schools end) as numeric),1)*100.0,2)  as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub, 'total_schools_with_missing_data', Total_schools_with_missing_data_sub))) as subjects from ((select distinct semester,school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,subject, 0 as Total_schools_with_missing_data,0 as total_schools, Count(DISTINCT(school_id)) AS Total_schools_with_missing_data_sub,Count(DISTINCT(school_id)) AS total_schools_sub from sat_exception_grade_data_last7 where subject!='grade' group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,grade,subject,semester) union (select distinct semester,school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade, 'grade' as subject, Count(DISTINCT(school_id)) AS Total_schools_with_missing_data, Count(DISTINCT(school_id)) AS total_schools,0 as Total_schools_with_missing_data_sub,0 as total_schools_sub from sat_exception_grade_data_last7 where subject ='grade' group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,grade,semester))as s group by school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,semester "
    },
    {
        "sat_exception_grade_district_last_30_days": "select s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade,s.semester, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.semester,a.district_latitude,a.district_longitude,a.district_id,a.district_name,a.grade,a.subject,a.total_schools,a.total_schools_not_received as Total_schools_with_missing_data, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data, total_schools_sub,total_schools_not_received_sub from ((select a.semester,a.district_id,district_name,district_latitude,district_longitude,a.grade,subject,0 as total_schools_not_received,NULL as total_schools, total_schools_not_received_sub,total_schools_sub from(select semester,district_id,district_name,district_latitude,district_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from sat_exception_grade_data_last30 where subject !='grade' group by district_id,district_name,district_latitude,district_longitude,grade,subject,semester) as a inner join  ( select district_id,count(distinct(shd.school_id)) as total_schools_sub,concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by district_id,sg.grade) as b on a.district_id=b.district_id and a.grade=b.grade) union (select c.semester,c.district_id,district_name,district_latitude,district_longitude,c.grade,subject,total_schools_with_missing_data_grade as total_schools_not_received, total_schools,0 as total_schools_not_received_sub, Null as total_schools_sub from(select semester,district_id,district_name,district_latitude,district_longitude,grade,subject,Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from sat_exception_grade_data_last30 where subject ='grade' group by district_id,district_name,district_latitude,district_longitude,grade,subject,semester)as c inner join ( select district_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by district_id,sg.grade)as d on c.district_id = d.district_id and c.grade=d.grade))as a)as s group by s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade,s.semester "
    },
    {
        "sat_exception_grade_block_last_30_days": "select s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade,s.semester, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.semester,a.block_latitude,a.block_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.grade,a.subject,total_schools_not_received_sub,total_schools_sub ,a.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data from ( (select a.semester,district_id,district_name,a.block_id,block_name,block_latitude,block_longitude,a.grade,subject,0 as total_schools_not_received,NULL as total_schools, total_schools_not_received_sub,total_schools_sub from (select semester,district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from sat_exception_grade_data_last30 where subject !='grade' group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject,semester) as a inner join  (select block_id,count(distinct(shd.school_id)) as total_schools_sub, concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by block_id,sg.grade) as b on a.block_id = b.block_id and a.grade=b.grade) union (select c.semester,district_id,district_name,c.block_id,block_name,block_latitude,block_longitude,c.grade,subject,total_schools_with_missing_data_grade as total_schools_not_received, total_schools,0 as total_schools_not_received_sub,Null as total_schools_sub from(select semester,district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject, Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from sat_exception_grade_data_last30 where subject ='grade' group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject,semester)as c inner join (select block_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by block_id,sg.grade)as d on c.block_id = d.block_id and c.grade=d.grade))as a)as s group by s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade,s.semester "
    },
    {
        "sat_exception_grade_cluster_last_30_days": "select s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade,s.semester, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools',total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.semester,a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id, a.block_name,a.cluster_id,a.cluster_name,a.grade,a.subject,a.total_schools, a.total_schools_not_received as Total_schools_with_missing_data,total_schools_not_received_sub,total_schools_sub, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data from ((select a.semester,district_id,district_name,block_id,block_name,a.cluster_id,cluster_name,cluster_latitude,cluster_longitude,a.grade,subject,0 as total_schools_not_received, Null as total_schools,total_schools_not_received_sub,total_schools_sub from( select semester,district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from sat_exception_grade_data_last30 where subject !='grade' group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject,semester) as a inner join (select cluster_id,count(distinct(shd.school_id)) as total_schools_sub, concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by cluster_id,sg.grade) as b on a.cluster_id = b.cluster_id and a.grade=b.grade) union (select c.semester,district_id,district_name,block_id,block_name,c.cluster_id,cluster_name,cluster_latitude,cluster_longitude,c.grade,subject, total_schools_with_missing_data_grade as total_schools_not_received,total_schools, 0 as total_schools_not_received_sub,NULL as total_schools_sub from (select semester,district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject, Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from sat_exception_grade_data_last30 where subject ='grade' group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject,semester)as c inner join (select cluster_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by cluster_id,sg.grade)as d on c.cluster_id = d.cluster_id and c.grade=d.grade))as a)as s group by s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade,s.semester "
    },
    {
        "sat_exception_grade_school_last_30_days": "select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,semester, sum(Total_schools_with_missing_data) as Total_schools_with_missing_data,sum(total_schools) as total_schools, round(cast(sum(s.Total_schools_with_missing_data) as numeric)/ coalesce(cast(sum(case when total_schools=0 then NULL else total_schools end) as numeric),1)*100.0,2)  as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub, 'total_schools_with_missing_data', Total_schools_with_missing_data_sub))) as subjects from ((select distinct semester,school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,subject, 0 as Total_schools_with_missing_data,0 as total_schools, Count(DISTINCT(school_id)) AS Total_schools_with_missing_data_sub,Count(DISTINCT(school_id)) AS total_schools_sub from sat_exception_grade_data_last30 where subject!='grade' group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,grade,subject,semester) union (select distinct semester,school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade, 'grade' as subject, Count(DISTINCT(school_id)) AS Total_schools_with_missing_data, Count(DISTINCT(school_id)) AS total_schools,0 as Total_schools_with_missing_data_sub,0 as total_schools_sub from sat_exception_grade_data_last30 where subject ='grade' group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,grade,semester))as s group by school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,semester "
    },
    {
        "sat_exception_management_district_all": "select a.district_latitude,a.district_longitude,a.district_id,a.district_name,b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data, round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data,a.school_management_type,semester from (select district_id ,district_name,district_latitude,district_longitude,Count(DISTINCT(school_id)) AS total_schools_not_received ,school_management_type,semester from sat_exception_data_all where school_management_type is not null group by district_id,district_name,district_latitude,district_longitude,school_management_type,semester) as a join (select district_id,school_management_type,count(distinct(school_id)) as total_schools from school_hierarchy_details where school_management_type is not null group by district_id,school_management_type)as b on a.district_id=b.district_id and a.school_management_type=b.school_management_type where a.school_management_type is not null; "
    },
    {
        "sat_exception_management_block_all": "select a.block_latitude,a.block_longitude,a.district_id,a.district_name,a.block_id,a.block_name,b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,a.school_management_type, semester,round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,block_id,block_name,block_latitude,block_longitude,school_management_type,semester, Count(DISTINCT(school_id)) AS total_schools_not_received from sat_exception_data_all where school_management_type is not null group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,school_management_type,semester) as a join (select block_id,school_management_type,count(distinct(school_id)) as total_schools from school_hierarchy_details where school_management_type is not null group by block_id,school_management_type)as b on a.block_id=b.block_id and a.school_management_type=b.school_management_type where a.school_management_type is not null; "
    },
    {
        "sat_exception_management_cluster_all": "select a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.cluster_id,a.cluster_name,a.school_management_type,semester, b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data, round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,school_management_type,semester, Count(DISTINCT(school_id)) AS total_schools_not_received from sat_exception_data_all  where school_management_type is not null group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,school_management_type,semester) as a join (select cluster_id,school_management_type,count(distinct(school_id)) as total_schools from school_hierarchy_details where school_management_type is not null group by cluster_id,school_management_type)as b on a.cluster_id=b.cluster_id and a.school_management_type=b.school_management_type where a.school_management_type is not null "
    },
    {
        "sat_exception_management_school_all": "select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_management_type, Count(DISTINCT(school_id)) AS Total_schools_with_missing_data,semester from sat_exception_data_all where school_management_type is not null group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,school_management_type,semester "
    },
    {
        "sat_exception_management_district_last7days": "select a.district_latitude,a.district_longitude,a.district_id,a.district_name,b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,a.school_management_type,semester, round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,district_latitude,district_longitude,school_management_type,semester, Count(DISTINCT(school_id)) AS total_schools_not_received from sat_exception_data_last7 where school_management_type is not null group by district_id,district_name,district_latitude,district_longitude,school_management_type,semester)as a join (select district_id,school_management_type,count(distinct(school_id)) as total_schools from school_hierarchy_details where school_management_type is not null group by district_id,school_management_type)as b on a.district_id=b.district_id and a.school_management_type=b.school_management_type where a.school_management_type is not null "
    },
    {
        "sat_exception_management_block_last7days": "select a.block_latitude,a.block_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.school_management_type,semester, b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data, round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,block_id,block_name,block_latitude,block_longitude,school_management_type,semester, Count(DISTINCT(school_id)) AS total_schools_not_received from sat_exception_data_last7 where school_management_type is not null group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,school_management_type,semester)as a join (select block_id,school_management_type,count(distinct(school_id)) as total_schools from school_hierarchy_details where school_management_type is not null group by block_id,school_management_type)as b on a.block_id=b.block_id and a.school_management_type=b.school_management_type where a.school_management_type is not null "
    },
    {
        "sat_exception_management_cluster_last7days": "select a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.cluster_id,a.cluster_name,b.total_schools,a.school_management_type,semester, a.total_schools_not_received as Total_schools_with_missing_data, round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,school_management_type,semester, Count(DISTINCT(school_id)) AS total_schools_not_received from sat_exception_data_last7 where school_management_type is not null group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,school_management_type,semester) as a join (select cluster_id,school_management_type,count(distinct(school_id)) as total_schools from school_hierarchy_details where school_management_type is not null group by cluster_id,school_management_type)as b on a.cluster_id=b.cluster_id and a.school_management_type=b.school_management_type where a.school_management_type is not null; "
    },
    {
        "sat_exception_management_schools_last7days": "select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_management_type,semester, Count(DISTINCT(school_id)) AS Total_schools_with_missing_data from sat_exception_data_last7 where school_management_type is not null group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,school_management_type,semester "
    },
    {
        "sat_exception_management_district_last_30_days": "select a.district_latitude,a.district_longitude,a.district_id,a.district_name,b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,a.school_management_type,semester, round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,district_latitude,district_longitude,school_management_type,semester, Count(DISTINCT(school_id)) AS total_schools_not_received from sat_exception_data_last30 where school_management_type is not null group by district_id,district_name,district_latitude,district_longitude,school_management_type,semester)as a join (select district_id,school_management_type,count(distinct(school_id)) as total_schools from school_hierarchy_details where school_management_type is not null  group by district_id,school_management_type)as b on a.district_id=b.district_id and a.school_management_type=b.school_management_type where a.school_management_type is not null; "
    },
    {
        "sat_exception_management_block_last_30_days": "select a.block_latitude,a.block_longitude,a.district_id,a.district_name,a.block_id,a.block_name,b.total_schools,a.school_management_type,semester, a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,block_id,block_name,block_latitude,block_longitude,school_management_type,semester, Count(DISTINCT(school_id)) AS total_schools_not_received from sat_exception_data_last30 where school_management_type is not null group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,school_management_type,semester)as a join (select block_id,school_management_type,count(distinct(school_id)) as total_schools from school_hierarchy_details where school_management_type is not null group by block_id,school_management_type)as b on a.block_id=b.block_id and a.school_management_type=b.school_management_type where a.school_management_type is not null; "
    },
    {
        "sat_exception_management_cluster_last_30_days": "select a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.cluster_id,a.cluster_name,b.total_schools,a.school_management_type,semester, a.total_schools_not_received as Total_schools_with_missing_data, round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,school_management_type,semester, Count(DISTINCT(school_id)) AS total_schools_not_received from sat_exception_data_last30 where school_management_type is not null group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,school_management_type,semester)as a join (select cluster_id,school_management_type,count(distinct(school_id)) as total_schools from school_hierarchy_details where school_management_type is not null group by cluster_id,school_management_type)as b on a.cluster_id=b.cluster_id and a.school_management_type=b.school_management_type where a.school_management_type is not null "
    },
    {
        "sat_exception_management_school_last_30_days": "select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_management_type,semester, Count(DISTINCT(school_id)) AS Total_schools_with_missing_data from sat_exception_data_last30 where school_management_type is not null group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,school_management_type,semester "
    },
    {
        "sat_exception_management_grade_district_all": "select s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade,s.school_management_type, s.semester, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data, sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data', percentage_schools_with_missing_data))) as subjects from(select a.district_latitude,a.district_longitude,a.district_id,a.district_name,a.grade,a.subject,a.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,a.school_management_type,a.semester, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data,total_schools_not_received_sub,total_schools_sub from ((select a.semester,a.school_management_type,a.district_id,district_name,district_latitude,district_longitude,a.grade,subject,0 as total_schools_not_received,Null as total_schools,total_schools_not_received_sub,total_schools_sub from (select district_id,district_name,district_latitude,district_longitude,school_management_type,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub, semester from sat_exception_grade_data_all where subject !='grade' and school_management_type is not null group by district_id,district_name,district_latitude,district_longitude,grade,subject, school_management_type,semester) as a inner join  (select district_id,count(distinct(shd.school_id)) as total_schools_sub, concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id   where school_management_type is not null group by district_id,sg.grade,school_management_type) as b on a.district_id = b.district_id and a.school_management_type=b.school_management_type and a.grade=b.grade) union (select c.semester,c.school_management_type,c.district_id,district_name,district_latitude,district_longitude,c.grade,subject,total_schools_with_missing_data_grade as total_schools_not_received, total_schools,0 as total_schools_not_received_sub,NULL as total_schools_sub from(select district_id,district_name,district_latitude,district_longitude,grade,subject,Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade,school_management_type, semester from sat_exception_grade_data_all where subject ='grade' and school_management_type is not null group by district_id,district_name,district_latitude,district_longitude,grade,subject, school_management_type,semester)as c inner join (select district_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id   where school_management_type is not null group by district_id,sg.grade,school_management_type )as d on c.district_id = d.district_id and c.school_management_type=d.school_management_type and c.grade=d.grade))as a)as s where s.school_management_type is not null group by s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade,s.school_management_type,s.semester "
    },
    {
        "sat_exception_management_grade_block_all": "select s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade,s.school_management_type,s.semester, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.semester,a.block_latitude,a.block_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.grade,a.subject,a.total_schools,a.total_schools_not_received as Total_schools_with_missing_data, a.school_management_type, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data,total_schools_not_received_sub,total_schools_sub from ((select a.semester,a.school_management_type,district_id,district_name,a.block_id,block_name,block_latitude,block_longitude,a.grade,subject,0 as total_schools_not_received,NULL as total_schools, total_schools_not_received_sub,total_schools_sub from(select semester,school_management_type,district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from sat_exception_grade_data_all where school_management_type is not null and  subject !='grade' group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject,school_management_type,semester) as a inner join  (select block_id,count(distinct(shd.school_id)) as total_schools_sub,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  where school_management_type is not null group by block_id,sg.grade,school_management_type) as b on a.block_id = b.block_id and a.school_management_type=b.school_management_type and a.grade=b.grade) union (select c.semester,c.school_management_type,district_id,district_name,c.block_id,block_name,block_latitude,block_longitude,c.grade,subject,total_schools_with_missing_data_grade as total_schools_not_received, total_schools, 0 as total_schools_not_received_sub,NULL as total_schools_sub from(select semester,school_management_type,district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject, Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from sat_exception_grade_data_all where subject ='grade'  and school_management_type is not null group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject,school_management_type,semester)as c inner join (select block_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  where school_management_type is not null group by block_id,sg.grade,school_management_type)as d on c.block_id = d.block_id and c.school_management_type=d.school_management_type and c.grade=d.grade))as a)as s where s.school_management_type is not null group by s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade,s.school_management_type,semester "
    },
    {
        "sat_exception_management_grade_cluster_all": "select s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade,s.school_management_type,s.semester, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools',total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.semester,a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.cluster_id,a.cluster_name,a.grade,a.subject,a.total_schools, a.total_schools_not_received as Total_schools_with_missing_data,a.school_management_type, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data,total_schools_not_received_sub,total_schools_sub from ((select a.semester,a.school_management_type,district_id,district_name,block_id,block_name,a.cluster_id,cluster_name,cluster_latitude,cluster_longitude,a.grade,subject, 0 as total_schools_not_received,NULL as total_schools,total_schools_not_received_sub,total_schools_sub from(select semester,school_management_type,district_id,district_name,block_id,block_name,cluster_id,cluster_name, cluster_latitude, cluster_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from sat_exception_grade_data_all where subject !='grade' and school_management_type is not null group by district_id,district_name,block_id,block_name, cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject,school_management_type,semester) as a inner join (select cluster_id,count(distinct(shd.school_id)) as total_schools_sub,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  where school_management_type is not null group by cluster_id,sg.grade,school_management_type) as b on a.cluster_id = b.cluster_id and a.school_management_type=b.school_management_type and a.cluster_id=b.cluster_id) union (select c.semester,c.school_management_type,district_id,district_name,block_id,block_name,c.cluster_id,cluster_name,cluster_latitude,cluster_longitude,c.grade, subject, total_schools_with_missing_data_grade as total_schools_not_received,total_schools,0 as total_schools_not_received_sub,NULL as total_schools_sub from (select semester,school_management_type,district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject, Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from sat_exception_grade_data_all where subject ='grade' and school_management_type is not null group by school_management_type,district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject,semester)as c inner join (select cluster_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  where school_management_type is not null group by cluster_id,sg.grade,school_management_type)as d on c.cluster_id = d.cluster_id and c.school_management_type=d.school_management_type and c.grade=d.grade))as a)as s group by s.school_management_type,s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade,s.semester "
    },
    {
        "sat_exception_management_grade_school_all": "select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade, s.school_management_type, s.semester, sum(Total_schools_with_missing_data) as Total_schools_with_missing_data,sum(total_schools) as total_schools, round(cast(sum(s.Total_schools_with_missing_data) as numeric)/ coalesce(cast(sum(case when total_schools=0 then NULL else total_schools end) as numeric),1)*100.0,2)  as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', Total_schools_with_missing_data_sub))) as subjects from ((select distinct school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,subject,school_management_type, 0 as Total_schools_with_missing_data,0 as total_schools,Count(DISTINCT(school_id)) AS Total_schools_with_missing_data_sub,Count(DISTINCT(school_id)) AS total_schools_sub,semester from sat_exception_grade_data_all where subject!='grade' and school_management_type is not null group by school_management_type,district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,grade,subject,semester) union (select distinct school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,'grade' as subject,school_management_type, Count(DISTINCT(school_id)) AS Total_schools_with_missing_data,Count(DISTINCT(school_id)) AS total_schools,0 as Total_schools_with_missing_data_sub,0 as total_schools_sub, semester from sat_exception_grade_data_all where subject ='grade' and school_management_type is not null group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,grade,school_management_type,semester))as s group by school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,school_management_type,semester "
    },
    {
        "sat_exception_management_grade_district_last_7_days": "select s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade,s.school_management_type, s.semester, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data, sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data', percentage_schools_with_missing_data))) as subjects from(select a.district_latitude,a.district_longitude,a.district_id,a.district_name,a.grade,a.subject,a.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,a.school_management_type,a.semester, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data,total_schools_not_received_sub,total_schools_sub from ((select a.semester,a.school_management_type,a.district_id,district_name,district_latitude,district_longitude,a.grade,subject,0 as total_schools_not_received,Null as total_schools,total_schools_not_received_sub,total_schools_sub from (select district_id,district_name,district_latitude,district_longitude,school_management_type,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub, semester from sat_exception_grade_data_last7 where subject !='grade' and school_management_type is not null group by district_id,district_name,district_latitude,district_longitude,grade,subject, school_management_type,semester) as a inner join  (select district_id,count(distinct(shd.school_id)) as total_schools_sub, concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id   where school_management_type is not null group by district_id,sg.grade,school_management_type) as b on a.district_id = b.district_id and a.school_management_type=b.school_management_type and a.grade=b.grade) union (select c.semester,c.school_management_type,c.district_id,district_name,district_latitude,district_longitude,c.grade,subject,total_schools_with_missing_data_grade as total_schools_not_received, total_schools,0 as total_schools_not_received_sub,NULL as total_schools_sub from(select district_id,district_name,district_latitude,district_longitude,grade,subject,Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade,school_management_type, semester from sat_exception_grade_data_last7 where subject ='grade' and school_management_type is not null group by district_id,district_name,district_latitude,district_longitude,grade,subject, school_management_type,semester)as c inner join (select district_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id   where school_management_type is not null group by district_id,sg.grade,school_management_type )as d on c.district_id = d.district_id and c.school_management_type=d.school_management_type and c.grade=d.grade))as a)as s where s.school_management_type is not null group by s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade,s.school_management_type,s.semester "
    },
    {
        "sat_exception_management_grade_block_last_7_days": "select s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade,s.school_management_type,s.semester, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.semester,a.block_latitude,a.block_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.grade,a.subject,a.total_schools,a.total_schools_not_received as Total_schools_with_missing_data, a.school_management_type, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data,total_schools_not_received_sub,total_schools_sub from ((select a.semester,a.school_management_type,district_id,district_name,a.block_id,block_name,block_latitude,block_longitude,a.grade,subject,0 as total_schools_not_received,NULL as total_schools, total_schools_not_received_sub,total_schools_sub from(select semester,school_management_type,district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from sat_exception_grade_data_last7 where school_management_type is not null and  subject !='grade' group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject,school_management_type,semester) as a inner join  (select block_id,count(distinct(shd.school_id)) as total_schools_sub,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  where school_management_type is not null group by block_id,sg.grade,school_management_type) as b on a.block_id = b.block_id and a.school_management_type=b.school_management_type and a.grade=b.grade) union (select c.semester,c.school_management_type,district_id,district_name,c.block_id,block_name,block_latitude,block_longitude,c.grade,subject,total_schools_with_missing_data_grade as total_schools_not_received, total_schools, 0 as total_schools_not_received_sub,NULL as total_schools_sub from(select semester,school_management_type,district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject, Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from sat_exception_grade_data_last7 where subject ='grade'  and school_management_type is not null group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject,school_management_type,semester)as c inner join (select block_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  where school_management_type is not null group by block_id,sg.grade,school_management_type)as d on c.block_id = d.block_id and c.school_management_type=d.school_management_type and c.grade=d.grade))as a)as s where s.school_management_type is not null group by s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade,s.school_management_type,semester "
    },
    {
        "sat_exception_management_grade_cluster_last_7_days": "select s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade,s.school_management_type,s.semester, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools',total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.semester,a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.cluster_id,a.cluster_name,a.grade,a.subject,a.total_schools, a.total_schools_not_received as Total_schools_with_missing_data,a.school_management_type, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data,total_schools_not_received_sub,total_schools_sub from ((select a.semester,a.school_management_type,district_id,district_name,block_id,block_name,a.cluster_id,cluster_name,cluster_latitude,cluster_longitude,a.grade,subject, 0 as total_schools_not_received,NULL as total_schools,total_schools_not_received_sub,total_schools_sub from(select semester,school_management_type,district_id,district_name,block_id,block_name,cluster_id,cluster_name, cluster_latitude, cluster_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from sat_exception_grade_data_last7 where subject !='grade' and school_management_type is not null group by district_id,district_name,block_id,block_name, cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject,school_management_type,semester) as a inner join (select cluster_id,count(distinct(shd.school_id)) as total_schools_sub,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  where school_management_type is not null group by cluster_id,sg.grade,school_management_type) as b on a.cluster_id = b.cluster_id and a.school_management_type=b.school_management_type and a.cluster_id=b.cluster_id) union (select c.semester,c.school_management_type,district_id,district_name,block_id,block_name,c.cluster_id,cluster_name,cluster_latitude,cluster_longitude,c.grade, subject, total_schools_with_missing_data_grade as total_schools_not_received,total_schools,0 as total_schools_not_received_sub,NULL as total_schools_sub from (select semester,school_management_type,district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject, Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from sat_exception_grade_data_last7 where subject ='grade' and school_management_type is not null group by school_management_type,district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject,semester)as c inner join (select cluster_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  where school_management_type is not null group by cluster_id,sg.grade,school_management_type)as d on c.cluster_id = d.cluster_id and c.school_management_type=d.school_management_type and c.grade=d.grade))as a)as s group by s.school_management_type,s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade,s.semester "
    },
    {
        "sat_exception_management_grade_school_last_7_days": "select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade, s.school_management_type, s.semester, sum(Total_schools_with_missing_data) as Total_schools_with_missing_data,sum(total_schools) as total_schools, round(cast(sum(s.Total_schools_with_missing_data) as numeric)/ coalesce(cast(sum(case when total_schools=0 then NULL else total_schools end) as numeric),1)*100.0,2)  as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', Total_schools_with_missing_data_sub))) as subjects from ((select distinct school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,subject,school_management_type, 0 as Total_schools_with_missing_data,0 as total_schools,Count(DISTINCT(school_id)) AS Total_schools_with_missing_data_sub,Count(DISTINCT(school_id)) AS total_schools_sub,semester from sat_exception_grade_data_last7 where subject!='grade' and school_management_type is not null group by school_management_type,district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,grade,subject,semester) union (select distinct school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,'grade' as subject,school_management_type, Count(DISTINCT(school_id)) AS Total_schools_with_missing_data,Count(DISTINCT(school_id)) AS total_schools,0 as Total_schools_with_missing_data_sub,0 as total_schools_sub, semester from sat_exception_grade_data_last7 where subject ='grade' and school_management_type is not null group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,grade,school_management_type,semester))as s group by school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,school_management_type,semester "
    },
    {
        "sat_exception_management_grade_district_last_30_days": "select s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade,s.school_management_type, s.semester, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data, sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data', percentage_schools_with_missing_data))) as subjects from(select a.district_latitude,a.district_longitude,a.district_id,a.district_name,a.grade,a.subject,a.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,a.school_management_type,a.semester, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data,total_schools_not_received_sub,total_schools_sub from ((select a.semester,a.school_management_type,a.district_id,district_name,district_latitude,district_longitude,a.grade,subject,0 as total_schools_not_received,Null as total_schools,total_schools_not_received_sub,total_schools_sub from (select district_id,district_name,district_latitude,district_longitude,school_management_type,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub, semester from sat_exception_grade_data_last30 where subject !='grade' and school_management_type is not null group by district_id,district_name,district_latitude,district_longitude,grade,subject, school_management_type,semester) as a inner join  (select district_id,count(distinct(shd.school_id)) as total_schools_sub, concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id   where school_management_type is not null group by district_id,sg.grade,school_management_type) as b on a.district_id = b.district_id and a.school_management_type=b.school_management_type and a.grade=b.grade) union (select c.semester,c.school_management_type,c.district_id,district_name,district_latitude,district_longitude,c.grade,subject,total_schools_with_missing_data_grade as total_schools_not_received, total_schools,0 as total_schools_not_received_sub,NULL as total_schools_sub from(select district_id,district_name,district_latitude,district_longitude,grade,subject,Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade,school_management_type, semester from sat_exception_grade_data_last30 where subject ='grade' and school_management_type is not null group by district_id,district_name,district_latitude,district_longitude,grade,subject, school_management_type,semester)as c inner join (select district_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id   where school_management_type is not null group by district_id,sg.grade,school_management_type )as d on c.district_id = d.district_id and c.school_management_type=d.school_management_type and c.grade=d.grade))as a)as s where s.school_management_type is not null group by s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade,s.school_management_type,s.semester "
    },
    {
        "sat_exception_management_grade_block_last_30_days": "select s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade,s.school_management_type,s.semester, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.semester,a.block_latitude,a.block_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.grade,a.subject,a.total_schools,a.total_schools_not_received as Total_schools_with_missing_data, a.school_management_type, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data,total_schools_not_received_sub,total_schools_sub from ((select a.semester,a.school_management_type,district_id,district_name,a.block_id,block_name,block_latitude,block_longitude,a.grade,subject,0 as total_schools_not_received,NULL as total_schools, total_schools_not_received_sub,total_schools_sub from(select semester,school_management_type,district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from sat_exception_grade_data_last30 where school_management_type is not null and  subject !='grade' group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject,school_management_type,semester) as a inner join  (select block_id,count(distinct(shd.school_id)) as total_schools_sub,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  where school_management_type is not null group by block_id,sg.grade,school_management_type) as b on a.block_id = b.block_id and a.school_management_type=b.school_management_type and a.grade=b.grade) union (select c.semester,c.school_management_type,district_id,district_name,c.block_id,block_name,block_latitude,block_longitude,c.grade,subject,total_schools_with_missing_data_grade as total_schools_not_received, total_schools, 0 as total_schools_not_received_sub,NULL as total_schools_sub from(select semester,school_management_type,district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject, Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from sat_exception_grade_data_last30 where subject ='grade'  and school_management_type is not null group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject,school_management_type,semester)as c inner join (select block_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  where school_management_type is not null group by block_id,sg.grade,school_management_type)as d on c.block_id = d.block_id and c.school_management_type=d.school_management_type and c.grade=d.grade))as a)as s where s.school_management_type is not null group by s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade,s.school_management_type,semester "
    },
    {
        "sat_exception_management_grade_cluster_last_30_days": "select s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade,s.school_management_type,s.semester, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools',total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.semester,a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.cluster_id,a.cluster_name,a.grade,a.subject,a.total_schools, a.total_schools_not_received as Total_schools_with_missing_data,a.school_management_type, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data,total_schools_not_received_sub,total_schools_sub from ((select a.semester,a.school_management_type,district_id,district_name,block_id,block_name,a.cluster_id,cluster_name,cluster_latitude,cluster_longitude,a.grade,subject, 0 as total_schools_not_received,NULL as total_schools,total_schools_not_received_sub,total_schools_sub from(select semester,school_management_type,district_id,district_name,block_id,block_name,cluster_id,cluster_name, cluster_latitude, cluster_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from sat_exception_grade_data_last30 where subject !='grade' and school_management_type is not null group by district_id,district_name,block_id,block_name, cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject,school_management_type,semester) as a inner join (select cluster_id,count(distinct(shd.school_id)) as total_schools_sub,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  where school_management_type is not null group by cluster_id,sg.grade,school_management_type) as b on a.cluster_id = b.cluster_id and a.school_management_type=b.school_management_type and a.cluster_id=b.cluster_id) union (select c.semester,c.school_management_type,district_id,district_name,block_id,block_name,c.cluster_id,cluster_name,cluster_latitude,cluster_longitude,c.grade, subject, total_schools_with_missing_data_grade as total_schools_not_received,total_schools,0 as total_schools_not_received_sub,NULL as total_schools_sub from (select semester,school_management_type,district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject, Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from sat_exception_grade_data_last30 where subject ='grade' and school_management_type is not null group by school_management_type,district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject,semester)as c inner join (select cluster_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  where school_management_type is not null group by cluster_id,sg.grade,school_management_type)as d on c.cluster_id = d.cluster_id and c.school_management_type=d.school_management_type and c.grade=d.grade))as a)as s group by s.school_management_type,s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade,s.semester "
    },
    {
        "sat_exception_management_grade_school_last_30_days": "select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade, s.school_management_type, s.semester, sum(Total_schools_with_missing_data) as Total_schools_with_missing_data,sum(total_schools) as total_schools, round(cast(sum(s.Total_schools_with_missing_data) as numeric)/ coalesce(cast(sum(case when total_schools=0 then NULL else total_schools end) as numeric),1)*100.0,2)  as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', Total_schools_with_missing_data_sub))) as subjects from ((select distinct school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,subject,school_management_type, 0 as Total_schools_with_missing_data,0 as total_schools,Count(DISTINCT(school_id)) AS Total_schools_with_missing_data_sub,Count(DISTINCT(school_id)) AS total_schools_sub,semester from sat_exception_grade_data_last30 where subject!='grade' and school_management_type is not null group by school_management_type,district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,grade,subject,semester) union (select distinct school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,'grade' as subject,school_management_type, Count(DISTINCT(school_id)) AS Total_schools_with_missing_data,Count(DISTINCT(school_id)) AS total_schools,0 as Total_schools_with_missing_data_sub,0 as total_schools_sub, semester from sat_exception_grade_data_last30 where subject ='grade' and school_management_type is not null group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,grade,school_management_type,semester))as s group by school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,school_management_type,semester "
    },
    {
        "sat_exam_block_by_year_semester": "select * from  semester_exam_block_year_semester"
    },
    {
        "sat_exam_district_by_year_semester": "select * from  semester_exam_district_year_semester"
    },
    {
        "sat_exam_cluster_by_year_semester": "select * from  semester_exam_cluster_year_semester"
    },
    {
        "sat_exam_school_by_year_semester": "select * from  semester_exam_school_year_semester"
    },
    {
        "sat_grade_district_by_year_semester": "select * from  semester_grade_district_year_semester"
    },
    {
        "sat_grade_block_by_year_semester": "select * from  semester_grade_block_year_semester"
    },
    {
        "sat_grade_cluster_by_year_semester": "select * from  semester_grade_cluster_year_semester"
    },
    {
        "sat_grade_school_by_year_semester": "select * from  semester_grade_school_year_semester"
    },
    {
        "sat_management_exam_district_year_semester": "select * from  semester_exam_district_mgmt_year_semester"
    },
    {
        "sat_management_exam_block_year_semester": "select * from  semester_exam_block_mgmt_year_semester"
    },
    {
        "sat_management_exam_cluster_year_semester": "select * from  semester_exam_cluster_mgmt_year_semester"
    },
    {
        "sat_management_exam_school_year_semester": "select * from  semester_exam_school_mgmt_year_semester"
    },
    {
        "sat_management_grade_district_year_semester": "select * from  semester_grade_district_mgmt_year_semester"
    },
    {
        "sat_management_grade_block_year_semester": "select * from  semester_grade_block_mgmt_year_semester"
    },
    {
        "sat_management_grade_cluster_year_semester": "select * from  semester_grade_cluster_mgmt_year_semester"
    },
    {
        "sat_management_grade_school_year_semester": "select * from  semester_grade_school_mgmt_year_semester"
    },
    {
        "sat_management_subject_all_footer_year_semester": "select academic_year, grade, semester, json_object_agg( subject, json_build_object( 'total_students', total_students, 'students_attended', students_attended, 'total_schools', total_schools ) order by subject ) as subjects, school_management_type from( select academic_year,subject, cast('Grade ' || grade as text) as grade, semester, sum(students_count) as total_students, count(distinct school_id) as total_schools, sum(students_attended) as students_attended, school_management_type from semester_exam_school_result  group by academic_year, grade, subject,semester, school_management_type order by grade desc, subject) as t group by grade, academic_year,semester, school_management_type order by 1, grade"
    },
    {
        "sat_management_subject_footer_district_year_semester": "select district_id,school_management_type,academic_year,semester,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) from( select a.district_id,a.school_management_type,a.semester,a.academic_year,a.grade,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.district_id,sge.school_management_type,semester,academic_year,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,district_id,sge.school_id,grade,school_management_type from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, academic_year,semester,school_management_type, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,district_id from semester_exam_stud_grade_count pert join semester_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code  group by school_management_type,studying_class,subject,psr.school_id,academic_year,semester,district_id)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class and sge.school_management_type=res.school_management_type group by sge.district_id,grade,subject,academic_year,semester,sge.school_management_type) as a join (select distinct academic_year,semester,district_id,grade,students_attended,total_students,total_schools,school_management_type from semester_grade_district_mgmt_year_semester) as b on a.district_id=b.district_id and a.grade=b.grade and a.academic_year=b.academic_year and a.semester=b.semester and a.school_management_type=b.school_management_type group by a.district_id,a.grade,a.academic_year,a.semester,a.school_management_type)as res group by district_id,academic_year,semester,school_management_type "
    },
    {
        "sat_management_subject_footer_cluster_year_semester": "select cluster_id,academic_year,semester,school_management_type,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) from( select a.cluster_id,a.semester,a.academic_year,a.grade,a.school_management_type,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.cluster_id,sge.school_management_type,semester,academic_year,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,cluster_id,sge.school_id,school_management_type,grade from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, academic_year,semester, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,cluster_id,school_management_type from semester_exam_stud_grade_count pert join semester_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code   group by studying_class,subject,psr.school_id,academic_year,semester,cluster_id,school_management_type)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class and sge.school_management_type=res.school_management_type group by sge.cluster_id,grade,subject,academic_year,semester,sge.school_management_type) as a join (select distinct academic_year,semester,cluster_id,grade,students_attended,total_students,total_schools,school_management_type from semester_grade_cluster_mgmt_year_semester) as b on a.cluster_id=b.cluster_id and a.grade=b.grade and a.academic_year=b.academic_year and a.semester=b.semester and a.school_management_type=b.school_management_type group by a.cluster_id,a.grade,a.academic_year,a.semester,a.school_management_type)as res group by cluster_id,academic_year,semester,school_management_type "
    },
    {
        "sat_management_subject_footer_school_year_semester": "select school_id,academic_year,semester,school_management_type,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) from( select a.school_id,a.semester,a.academic_year,a.grade,a.school_management_type,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.school_id,sge.school_management_type,semester,academic_year,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,sge.school_id,grade,school_management_type from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, academic_year,semester, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,psr.school_management_type from semester_exam_stud_grade_count pert join semester_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code  group by studying_class,subject,psr.school_id,academic_year,semester,school_management_type)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class and sge.school_management_type=res.school_management_type group by sge.school_id,grade,subject,academic_year,semester,sge.school_management_type) as a join (select distinct academic_year,semester,school_id,grade,students_attended,total_students,total_schools,school_management_type from semester_grade_school_mgmt_year_semester) as b on a.school_id=b.school_id and a.grade=b.grade and a.academic_year=b.academic_year and a.semester=b.semester and a.school_management_type=b.school_management_type group by a.school_id,a.grade,a.academic_year,a.semester,a.school_management_type)as res group by school_id,academic_year,semester,school_management_type"
    },
    {
        "sat_subject_all_footer_year_semester": "select academic_year, grade, semester, json_object_agg( subject, json_build_object( 'total_students', total_students, 'students_attended', students_attended, 'total_schools', total_schools ) order by subject ) as subjects from( select academic_year, cast('Grade ' || grade as text) as grade, cast(subject as text) as subject,semester, sum(students_count) as total_students, count(distinct school_id) as total_schools, sum(students_attended) as students_attended from semester_exam_school_result  group by academic_year, grade, subject, semester order by grade desc, subject) as t group by grade, academic_year, semester order by 1, grade"
    },
    {
        "sat_subject_footer_district_year_semester": "select district_id,academic_year,semester,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) from( select a.district_id,a.semester,a.academic_year,a.grade,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.district_id,semester,academic_year,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,district_id,sge.school_id,grade from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, academic_year, semester, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,district_id from semester_exam_stud_grade_count pert join semester_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code  group by studying_class,subject,psr.school_id,academic_year,semester,district_id)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class group by sge.district_id,grade,subject,academic_year,semester) as a join (select distinct academic_year,semester,district_id,grade,students_attended,total_students,total_schools from semester_grade_district_year_semester) as b on a.district_id=b.district_id and a.grade=b.grade and a.academic_year=b.academic_year and a.semester=b.semester group by a.district_id,a.grade,a.academic_year,a.semester)as res group by district_id,academic_year,semester "
    },
    {
        "sat_subject_footer_block_year_semester": "select block_id,academic_year,semester,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) from( select a.block_id,a.semester,a.academic_year,a.grade,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.block_id,semester,academic_year,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,block_id,sge.school_id,grade from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, academic_year,semester, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,block_id from semester_exam_stud_grade_count pert join semester_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code  group by studying_class,subject,psr.school_id,academic_year,semester,block_id)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class group by sge.block_id,grade,subject,academic_year,semester) as a join (select distinct academic_year,semester,block_id,grade,students_attended,total_students,total_schools from semester_grade_block_year_semester) as b on a.block_id=b.block_id and a.grade=b.grade and a.academic_year=b.academic_year and a.semester=b.semester group by a.block_id,a.grade,a.academic_year,a.semester)as res group by block_id,academic_year,semester "
    },
    {
        "sat_subject_footer_cluster_year_semester": "select cluster_id,academic_year,semester,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) from( select a.cluster_id,a.semester,a.academic_year,a.grade,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.cluster_id,semester,academic_year,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,cluster_id,sge.school_id,grade from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, academic_year,semester, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,cluster_id from semester_exam_stud_grade_count pert join semester_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code group by studying_class,subject,psr.school_id,academic_year,semester,cluster_id)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class group by sge.cluster_id,grade,subject,academic_year,semester) as a join (select distinct academic_year,semester,cluster_id,grade,students_attended,total_students,total_schools from semester_grade_cluster_year_semester) as b on a.cluster_id=b.cluster_id and a.grade=b.grade and a.academic_year=b.academic_year and a.semester=b.semester group by a.cluster_id,a.grade,a.academic_year,a.semester)as res group by cluster_id,academic_year,semester "
    },
    {
        "sat_subject_footer_school_year_semester": "select school_id,academic_year,semester,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) from( select a.school_id,a.semester,a.academic_year,a.grade,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.school_id,semester,academic_year,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,sge.school_id,grade from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, academic_year,semester, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id from semester_exam_stud_grade_count pert join semester_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code  group by studying_class,subject,psr.school_id,academic_year,semester)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class group by sge.school_id,grade,subject,academic_year,semester) as a join (select distinct academic_year,semester,school_id,grade,students_attended,total_students,total_schools from semester_grade_school_year_semester) as b on a.school_id=b.school_id and a.grade=b.grade and a.academic_year=b.academic_year and a.semester=b.semester group by a.school_id,a.grade,a.academic_year,a.semester)as res group by school_id,academic_year,semester"
    },
    {
        "sat_management_subject_footer_block_year_semester": "select block_id,school_management_type,academic_year,semester,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) from( select a.block_id,a.school_management_type,a.semester,a.academic_year,a.grade,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.block_id,sge.school_management_type,semester,academic_year,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,block_id,sge.school_id,grade,school_management_type from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, academic_year,semester, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,block_id,school_management_type from semester_exam_stud_grade_count pert join semester_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code  group by studying_class,subject,psr.school_id,academic_year,semester,block_id,school_management_type)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class and sge.school_management_type=res.school_management_type group by sge.block_id,grade,subject,academic_year,semester,sge.school_management_type) as a join (select distinct academic_year,semester,block_id,grade,students_attended,total_students,total_schools,school_management_type from semester_grade_block_mgmt_year_semester) as b on a.block_id=b.block_id and a.grade=b.grade and a.academic_year=b.academic_year and a.semester=b.semester and a.school_management_type=b.school_management_type group by a.block_id,a.grade,a.academic_year,a.semester,a.school_management_type)as res group by block_id,academic_year,semester,school_management_type "
    },
    {
        "sat_line_chart_state": "select * from semester_exam_state_trendline"
    },
    {
        "sat_district_wise": "select * from semester_exam_district_year_semester"
    },
    {
        "sat_block_wise": "select * from semester_exam_block_year_semester"
    },
    {
        "sat_cluster_wise": "select * from semester_exam_cluster_year_semester"
    },
    {
        "sat_school_wise": "select * from semester_exam_school_year_semester"
    },
    {
        "sat_management_line_chart_state": "select * from  semester_exam_state_mgmt_trendline"
    },
    {
        "sat_management_district_by_semester_year": "select * from  semester_exam_district_mgmt_year_semester"
    },
    {
        "sat_management_block_by_semester_year": "select * from  semester_exam_block_mgmt_year_semester"
    },
    {
        "sat_management_cluster_by_semester_year": "select * from  semester_exam_cluster_mgmt_year_semester"
    },
    {
        "sat_management_school_by_semester_year": "select * from  semester_exam_school_mgmt_year_semester"
    }
]