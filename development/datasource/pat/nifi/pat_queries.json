[
    {
        "pat_meta_by_month_year": "select a.academic_year,jsonb_agg(a.month) as month from (select distinct academic_year,trim(TO_CHAR(TO_DATE(date_part('month',exam_date)::text, 'MM'), 'Month')) AS month from periodic_exam_school_result order by academic_year,month) as a group by academic_year;"
    },
    {
        "pat_management_exam_school_overall": "Select * from periodic_exam_school_mgmt_all"
    },
    {
        "pat_management_exam_cluster_overall": "Select * from periodic_exam_cluster_mgmt_all"
    },
    {
        "pat_management_exam_block_overall": "select * from periodic_exam_block_mgmt_all"
    },
    {
        "pat_management_exam_district_overall": "Select * from periodic_exam_district_mgmt_all"
    },
    {
        "pat_management_grade_school_overall": "Select * from periodic_grade_school_mgmt_all"
    },
    {
        "pat_management_grade_cluster_overall": "Select * from periodic_grade_cluster_mgmt_all"
    },
    {
        "pat_management_grade_block_overall": "Select * from periodic_grade_block_mgmt_all"
    },
    {
        "pat_management_grade_district_overall": "Select * from periodic_grade_district_mgmt_all"
    },
    {
        "pat_management_exam_school_last_30_days": "Select * from periodic_exam_school_mgmt_last30"
    },
    {
        "pat_management_exam_cluster_last_30_days": "Select * from periodic_exam_cluster_mgmt_last30"
    },
    {
        "pat_management_exam_block_last_30_days": "Select * from periodic_exam_block_mgmt_last30"
    },
    {
        "pat_management_exam_district_last_30_days": "Select * from periodic_exam_district_mgmt_last30"
    },
    {
        "pat_management_grade_school_last_30_days": "Select * from periodic_grade_school_mgmt_last30"
    },
    {
        "pat_management_grade_cluster_last_30_days": "Select * from periodic_grade_cluster_mgmt_last30"
    },
    {
        "pat_management_grade_block_last_30_days": "Select * from periodic_grade_block_mgmt_last30"
    },
    {
        "pat_management_grade_district_last_30_days": "Select * from periodic_grade_district_mgmt_last30"
    },
    {
        "pat_management_exam_school_last_7_days": "Select * from periodic_exam_school_mgmt_last7"
    },
    {
        "pat_management_exam_cluster_last_7_days": "Select * from periodic_exam_cluster_mgmt_last7"
    },
    {
        "pat_management_exam_block_last_7_days": "Select * from periodic_exam_block_mgmt_last7"
    },
    {
        "pat_management_exam_district_last_7_days": "Select * from periodic_exam_district_mgmt_last7"
    },
    {
        "pat_management_grade_school_last_7_days": "Select * from periodic_grade_school_mgmt_last7"
    },
    {
        "pat_management_grade_cluster_last_7_days": "Select * from periodic_grade_cluster_mgmt_last7"
    },
    {
        "pat_management_grade_block_last_7_days": "Select * from periodic_grade_block_mgmt_last7"
    },
    {
        "pat_management_grade_district_last_7_days": "Select * from periodic_grade_district_mgmt_last7"
    },
    {
        "pat_management_exam_school_year_month": "Select * from periodic_exam_school_mgmt_year_month"
    },
    {
        "pat_management_exam_cluster_year_month": "Select * from periodic_exam_cluster_mgmt_year_month"
    },
    {
        "pat_management_exam_block_year_month": "Select * from periodic_exam_block_mgmt_year_month"
    },
    {
        "pat_management_exam_district_year_month": "Select * from periodic_exam_district_mgmt_year_month"
    },
    {
        "pat_management_grade_school_year_month": "Select * from periodic_grade_school_mgmt_year_month"
    },
    {
        "pat_management_grade_cluster_year_month": "Select * from periodic_grade_cluster_mgmt_year_month"
    },
    {
        "pat_management_grade_block_year_month": "Select * from periodic_grade_block_mgmt_year_month"
    },
    {
        "pat_management_grade_district_year_month": "Select * from periodic_grade_district_mgmt_year_month"
    },
    {
        "pat_management_learning_outcome_p1_question_cluster": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date, block_id,block_name,cluster_id,cluster_name,school_id,school_name,question_id as indicator_id,district_id,district_name,question_id, indicator,sum(students_attended) as students_attended,rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month, round(coalesce(sum(obtained_marks), 0)/nullif(coalesce(sum(total_marks), 0), 0), 1)as marks, round(coalesce((sum(obtained_marks)*100), 0)/nullif(coalesce(sum(total_marks), 0), 0), 1)as percentage, count(school_id) as total_schools, sum(total_students) as total_students,school_management_type from periodic_exam_school_qst_result where school_management_type is not null and exam_code in (select exam_code from latest_data_to_be_processed_pat) or substring(exam_code, 10, 6) in (select substring(exam_code, 10, 6) from latest_data_to_be_processed_pat) group by academic_year,grade,subject,exam_date,block_id,block_name,cluster_id,cluster_name,school_id,school_name,district_id,district_name,question_id,indicator, school_management_type order by district_id,block_id,cluster_id,school_id,question_id;"
    },
    {
        "pat_management_learning_outcome_p1_question_all": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date, district_id,district_name,question_id,indicator,question_id as indicator_id,sum(students_attended) as students_attended, rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month, round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(total_marks),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id) as total_schools,sum(total_students) as total_students,school_management_type from periodic_exam_school_qst_result where school_management_type is not null and exam_code in (select exam_code from latest_data_to_be_processed_pat) or substring(exam_code,10,6) in (select substring(exam_code,10,6) from latest_data_to_be_processed_pat) group by academic_year,grade,subject,exam_date,district_id,district_name,question_id,indicator,school_management_type order by district_id,question_id "
    },
    {
        "pat_management_learning_outcome_p1_question_district": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date, block_id,block_name,district_id,district_name,question_id,indicator,question_id as indicator_id,sum(students_attended) as students_attended, rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month, round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(total_marks),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id) as total_schools,sum(total_students) as total_students,school_management_type from periodic_exam_school_qst_result where school_management_type is not null and exam_code in (select exam_code from latest_data_to_be_processed_pat) or substring(exam_code,10,6) in (select substring(exam_code, 10, 6) from latest_data_to_be_processed_pat) group by academic_year,grade,subject,exam_date,block_id,block_name,district_id,district_name,question_id,indicator,school_management_type order by district_id,block_id,question_id "
    },
    {
        "pat_management_learning_outcome_p1_question_block": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date, block_id,block_name,cluster_id,cluster_name,district_id,district_name,question_id,indicator,question_id as indicator_id,sum(students_attended) as students_attended, rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month, round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(total_marks),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id) as total_schools,sum(total_students) as total_students,school_management_type from periodic_exam_school_qst_result where school_management_type is not null and exam_code in (select exam_code from latest_data_to_be_processed_pat) or substring(exam_code,10,6) in (select substring(exam_code, 10, 6) from latest_data_to_be_processed_pat) group by academic_year,grade,subject,exam_date,block_id,block_name,cluster_id,cluster_name,district_id,district_name,question_id,indicator,school_management_type order by district_id,block_id,cluster_id,question_id "
    },
    {
        "pat_management_learning_outcome_p1_indicator_all": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date, district_id,district_name,indicator,sum(students_attended) as students_attended, rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month, round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(total_marks),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id) as total_schools,sum(total_students) as total_students,school_management_type from periodic_exam_school_ind_result where school_management_type is not null group by academic_year,grade,subject,exam_date,district_id,district_name,indicator ,school_management_type order by district_id "
    },
    {
        "pat_management_learning_outcome_p1_indicator_district": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date, block_id,block_name,district_id,district_name,indicator,sum(students_attended) as students_attended, rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month, round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(total_marks),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id) as total_schools,sum(total_students) as total_students,school_management_type from periodic_exam_school_ind_result where school_management_type is not null group by academic_year,grade,subject,exam_date,block_id,block_name,district_id,district_name,indicator,school_management_type order by district_id,block_id "
    },
    {
        "pat_management_learning_outcome_p1_indicator_block": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date, block_id,block_name,cluster_id,cluster_name,district_id,district_name,indicator,sum(students_attended) as students_attended, rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month, round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(total_marks),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id) as total_schools,sum(total_students) as total_students,school_management_type from periodic_exam_school_ind_result where school_management_type is not null group by academic_year,grade,subject,exam_date,block_id,block_name,cluster_id,cluster_name,district_id,district_name,indicator,school_management_type order by district_id,block_id,cluster_id "
    },
    {
        "pat_management_learning_outcome_p1_indicator_cluster": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date, block_id,block_name,cluster_id,cluster_name,school_id,school_name,district_id,district_name,indicator, sum(students_attended) as students_attended,rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'),'Month')))as month, round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(total_marks),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id) as total_schools,sum(total_students) as total_students,school_management_type from periodic_exam_school_ind_result where school_management_type is not null group by academic_year,grade,subject,exam_date,block_id,block_name,cluster_id,cluster_name,school_id,school_name,district_id,district_name,indicator,school_management_type order by district_id,block_id,cluster_id,school_id "
    },
    {
        "pat_management_learning_outcome_p3_all": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date, district_id,district_name,sum(students_attended) as students_attended, rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month, round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(total_marks),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id)as total_schools,sum(students_count) as total_students,school_management_type from periodic_exam_school_result where students_attended>0 and school_management_type is not null and exam_code in (select exam_code from latest_data_to_be_processed_pat) or substring(exam_code,10,6) in (select substring(exam_code, 10, 6) from latest_data_to_be_processed_pat) group by academic_year,grade,subject,exam_date,district_id,district_name,school_management_type order by district_id,grade,subject_name "
    },
    {
        "pat_management_learning_outcome_p3_district": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date, block_id,block_name,district_id,district_name,sum(students_attended) as students_attended, rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month, round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(total_marks),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id) as total_schools,sum(students_count) as total_students,school_management_type from periodic_exam_school_result where students_attended>0 and school_management_type is not null and exam_code in (select exam_code from latest_data_to_be_processed_pat) or substring(exam_code,10,6) in (select substring(exam_code, 10, 6) from latest_data_to_be_processed_pat) group by academic_year,grade,subject,exam_date,block_id,block_name,district_id,district_name,school_management_type order by district_id,block_id "
    },
    {
        "pat_management_learning_outcome_p3_block": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date, block_id,block_name,cluster_id,cluster_name,district_id,district_name,sum(students_attended) as students_attended, rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month, round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(total_marks),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id) as total_schools,sum(students_count) as total_students,school_management_type from periodic_exam_school_result where students_attended>0 and school_management_type is not null and exam_code in (select exam_code from latest_data_to_be_processed_pat) or substring(exam_code,10,6) in (select substring(exam_code, 10, 6) from latest_data_to_be_processed_pat) group by academic_year,grade,subject,exam_date,block_id,block_name,cluster_id,cluster_name,district_id,district_name,school_management_type order by district_id,block_id,cluster_id "
    },
    {
        "pat_management_learning_outcome_p3_cluster": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date, block_id,block_name,cluster_id,cluster_name,school_id,school_name,district_id,district_name,sum(students_attended) as students_attended, rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month, round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(total_marks),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id) as total_schools,sum(students_count) as total_students,school_management_type from periodic_exam_school_result where students_attended>0 and school_management_type is not null and exam_code in (select exam_code from latest_data_to_be_processed_pat) or substring(exam_code,10,6) in (select substring(exam_code, 10, 6) from latest_data_to_be_processed_pat) group by academic_year,grade,subject,exam_date,block_id,block_name,cluster_id,cluster_name,school_id,school_name,district_id,district_name,school_management_type order by district_id,block_id,cluster_id,school_id "
    },
    {
        "pat_exception_management_district_overall": "select a.district_latitude,a.district_longitude,a.district_id,a.district_name,b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,a.school_management_type,round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,district_latitude,district_longitude,school_management_type,Count(DISTINCT(school_id)) AS total_schools_not_received from pat_exception_data_all where school_management_type is not null group by district_id,district_name,district_latitude,district_longitude,school_management_type)as a join (select district_id,school_management_type,count(distinct(school_id)) as total_schools from school_hierarchy_details where school_management_type is not null group by district_id,school_management_type)as b on a.district_id=b.district_id and a.school_management_type=b.school_management_type where a.school_management_type is not null;"
    },
    {
        "pat_exception_management_block_overall": "select a.block_latitude,a.block_longitude,a.district_id,a.district_name,a.block_id,a.block_name,b.total_schools,a.school_management_type,a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,block_id,block_name,block_latitude,block_longitude,school_management_type,Count(DISTINCT(school_id)) AS total_schools_not_received from pat_exception_data_all where school_management_type is not null group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,school_management_type) as a join (select block_id,school_management_type,count(distinct(school_id)) as total_schools from school_hierarchy_details where school_management_type is not null group by block_id,school_management_type)as b on a.block_id=b.block_id and a.school_management_type=b.school_management_type where a.school_management_type is not null"
    },
    {
        "pat_exception_management_cluster_overall": "select a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.cluster_id,a.cluster_name,b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,a.school_management_type,round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,school_management_type,Count(DISTINCT(school_id)) AS total_schools_not_received from pat_exception_data_all where school_management_type is not null group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,school_management_type)as a join (select cluster_id,school_management_type,count(distinct(school_id)) as total_schools from school_hierarchy_details group by cluster_id,school_management_type)as b on a.cluster_id=b.cluster_id and a.school_management_type=b.school_management_type where a.school_management_type is not null"
    },
    {
        "pat_exception_management_school_overall": "select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_management_type,Count(DISTINCT(school_id)) AS Total_schools_with_missing_data from pat_exception_data_all where school_management_type is not null group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,school_management_type"
    },
    {
        "pat_exception_management_district_last_7_days": "select a.district_latitude,a.district_longitude,a.district_id,a.district_name,b.total_schools,a.school_management_type,a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,district_latitude,district_longitude,school_management_type,Count(DISTINCT(school_id)) AS total_schools_not_received from pat_exception_data_last7 where school_management_type is not null group by district_id,district_name,district_latitude,district_longitude,school_management_type) as a join (select district_id,school_management_type,count(distinct(school_id)) as total_schools from school_hierarchy_details group by district_id,school_management_type)as b on a.district_id=b.district_id and a.school_management_type=b.school_management_type where a.school_management_type is not null"
    },
    {
        "pat_exception_management_block_last_7_days": "select a.block_latitude,a.block_longitude,a.district_id,a.district_name,a.block_id,a.block_name,b.total_schools,a.school_management_type,a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,block_id,block_name,block_latitude,block_longitude,school_management_type,Count(DISTINCT(school_id)) AS total_schools_not_received from pat_exception_data_last7 where school_management_type is not null group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,school_management_type)as a join (select block_id,school_management_type,count(distinct(school_id)) as total_schools from school_hierarchy_details group by block_id,school_management_type)as b on a.block_id=b.block_id and a.school_management_type=b.school_management_type where a.school_management_type is not null"
    },
    {
        "pat_exception_management_cluster_last_7_days": "select a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.cluster_id,a.cluster_name,b.total_schools,a.school_management_type,a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,school_management_type,Count(DISTINCT(school_id)) AS total_schools_not_received from pat_exception_data_last7 where school_management_type is not null group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,school_management_type) as a join (select cluster_id,school_management_type,count(distinct(school_id)) as total_schools from school_hierarchy_details group by cluster_id,school_management_type)as b on a.cluster_id=b.cluster_id and a.school_management_type=b.school_management_type where a.school_management_type is not null"
    },
    {
        "pat_exception_management_school_last_7_days": "select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_management_type,Count(DISTINCT(school_id)) AS Total_schools_with_missing_data from pat_exception_data_last7 where school_management_type is not null group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,school_management_type"
    },
    {
        "pat_exception_management_district_last_30_days": "select a.district_latitude,a.district_longitude,a.district_id,a.district_name,b.total_schools,a.school_management_type,a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,district_latitude,district_longitude,school_management_type,Count(DISTINCT(school_id)) AS total_schools_not_received from pat_exception_data_last30 where school_management_type is not null group by district_id,district_name,district_latitude,district_longitude,school_management_type)as a join (select district_id,school_management_type,count(distinct(school_id)) as total_schools from school_hierarchy_details group by district_id,school_management_type)as b on a.district_id=b.district_id and a.school_management_type=b.school_management_type where a.school_management_type is not null"
    },
    {
        "pat_exception_management_block_last_30_days": "select a.block_latitude,a.block_longitude,a.district_id,a.district_name,a.block_id,a.block_name,b.total_schools,a.school_management_type,a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,block_id,block_name,block_latitude,block_longitude,school_management_type,Count(DISTINCT(school_id)) AS total_schools_not_received from pat_exception_data_last30 where school_management_type is not null group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,school_management_type)as a join (select block_id,school_management_type,count(distinct(school_id)) as total_schools from school_hierarchy_details group by block_id,school_management_type)as b on a.block_id=b.block_id and a.school_management_type=b.school_management_type where a.school_management_type is not null"
    },
    {
        "pat_exception_management_cluster_last_30_days": "select a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.cluster_id,a.cluster_name,b.total_schools,a.school_management_type,a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,school_management_type,Count(DISTINCT(school_id)) AS total_schools_not_received from pat_exception_data_last30 where school_management_type is not null group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,school_management_type)as a join (select cluster_id,school_management_type,count(distinct(school_id)) as total_schools from school_hierarchy_details group by cluster_id,school_management_type)as b on a.cluster_id=b.cluster_id and a.school_management_type=b.school_management_type where a.school_management_type is not null"
    },
    {
        "pat_exception_management_school_last_30_days": "select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_management_type,Count(DISTINCT(school_id)) AS Total_schools_with_missing_data from pat_exception_data_last30 where school_management_type is not null group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,school_management_type"
    },
    {
        "pat_exception_management_grade_district_overall": "select s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade,s.school_management_type, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data', percentage_schools_with_missing_data))) as subjects from(select a.district_latitude,a.district_longitude,a.district_id,a.district_name,a.grade,a.subject,a.total_schools, a.total_schools_not_received as Total_schools_with_missing_data, a.school_management_type, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data ,total_schools_not_received_sub,total_schools_sub from ((select a.school_management_type,a.district_id,district_name,district_latitude,district_longitude,a.grade,subject,0 as total_schools_not_received,NULL as total_schools,total_schools_not_received_sub,total_schools_sub from (select district_id,district_name,district_latitude,district_longitude,school_management_type,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from pat_exception_grade_data_all where subject !='grade' and school_management_type is not null group by district_id,district_name,district_latitude,district_longitude,grade,subject,school_management_type) as a inner join ( select district_id,count(distinct(shd.school_id)) as total_schools_sub,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id   where school_management_type is not null group by district_id,sg.grade,school_management_type) as b on a.district_id = b.district_id and a.school_management_type=b.school_management_type and a.grade=b.grade) union (select c.school_management_type,c.district_id,district_name,district_latitude,district_longitude,c.grade,subject, total_schools_with_missing_data_grade as total_schools_not_received,total_schools, 0 as  total_schools_not_received_sub,NULL as total_schools_sub from (select district_id,district_name,district_latitude,district_longitude,grade,subject, Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade,school_management_type from pat_exception_grade_data_all where subject ='grade' and school_management_type is not null group by district_id,district_name,district_latitude,district_longitude,grade,subject,school_management_type) as c inner join ( select district_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  where school_management_type is not null group by district_id,sg.grade,school_management_type )as d on c.district_id = d.district_id and c.school_management_type=d.school_management_type and c.grade=d.grade))as a)as s where s.school_management_type is not null group by s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade,s.school_management_type "
    },
    {
        "pat_exception_management_grade_block_overall": "select s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade,s.school_management_type, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.block_latitude,a.block_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.grade,a.subject,a.total_schools, a.total_schools_not_received as Total_schools_with_missing_data, a.school_management_type, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data ,total_schools_not_received_sub,total_schools_sub from ((select a.school_management_type,district_id,district_name,a.block_id,block_name,block_latitude,block_longitude,a.grade,subject,0 as total_schools_not_received, NULL as total_schools,total_schools_not_received_sub,total_schools_sub from(select school_management_type,district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from pat_exception_grade_data_all where school_management_type is not null and subject !='grade' group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject,school_management_type) as a inner join (select block_id,count(distinct(shd.school_id)) as total_schools_sub,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  where school_management_type is not null group by block_id,sg.grade,school_management_type) as b on a.block_id = b.block_id and a.school_management_type=b.school_management_type and a.grade=b.grade) union (select c.school_management_type,district_id,district_name,c.block_id,block_name,block_latitude,block_longitude,c.grade,subject,total_schools_with_missing_data_grade as total_schools_not_received, total_schools, 0 as total_schools_not_received_sub, NULL as total_schools from(select school_management_type,district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject, Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from pat_exception_grade_data_all where subject ='grade'  and school_management_type is not null group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject,school_management_type)as c inner join (select block_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  where school_management_type is not null group by block_id,sg.grade,school_management_type)as d on c.block_id = d.block_id and c.school_management_type=d.school_management_type and c.grade=d.grade))as a)as s where s.school_management_type is not null group by s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade,s.school_management_type "
    },
    {
        "pat_exception_management_grade_cluster_overall": "select s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade,s.school_management_type, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/cast(sum(s.total_schools) as numeric))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.cluster_id,a.cluster_name,a.grade,a.subject,a.total_schools, a.total_schools_not_received as Total_schools_with_missing_data,a.school_management_type,total_schools_not_received_sub,total_schools_sub, round((cast(a.total_schools_not_received_sub as numeric)/cast(a.total_schools_sub as numeric))*100.0,2) as percentage_schools_with_missing_data from (( select a.school_management_type,district_id,district_name,block_id,block_name,a.cluster_id,cluster_name,cluster_latitude,cluster_longitude, a.grade,subject,0 as total_schools_not_received,NULL as total_schools, total_schools_not_received_sub,total_schools_sub from (select school_management_type,district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from pat_exception_grade_data_all where subject !='grade' and school_management_type is not null group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject,school_management_type) as a inner join (select cluster_id,count(distinct(shd.school_id)) as total_schools_sub,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  where school_management_type is not null group by cluster_id,sg.grade,school_management_type) as b on a.cluster_id = b.cluster_id and a.school_management_type=b.school_management_type and a.grade=b.grade) union (select c.school_management_type,district_id,district_name,block_id,block_name,c.cluster_id,cluster_name,cluster_latitude,cluster_longitude,c.grade,subject, total_schools_with_missing_data_grade as total_schools_not_received,total_schools,0 as total_schools_not_received_sub,NULL as total_schools_sub from (select school_management_type,district_id,district_name,block_id, block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject, Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from pat_exception_grade_data_all where subject ='grade' and school_management_type is not null group by school_management_type,district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject)as c inner join (select cluster_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  where school_management_type is not null group by cluster_id,sg.grade,school_management_type)as d on c.cluster_id = d.cluster_id and c.school_management_type=d.school_management_type and c.grade=d.grade))as a)as s group by s.school_management_type,s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade "
    },
    {
        "pat_exception_management_grade_school_overall": "select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,s.school_management_type, sum(s.Total_schools_with_missing_data) as Total_schools_with_missing_data,sum(s.total_schools) as total_schools, round(cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(case when total_schools=0 then NULL else total_schools end) as numeric),1)*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub, 'total_schools_with_missing_data', Total_schools_with_missing_data_sub))) as subjects from ((select distinct school_latitude,school_longitude,district_id,district_name,block_id,block_name, cluster_id,cluster_name,school_id,school_name,grade,subject,school_management_type, 0 as  Total_schools_with_missing_data,0 as total_schools,Count(DISTINCT(school_id)) AS Total_schools_with_missing_data_sub, Count(DISTINCT(school_id)) AS total_schools_sub from pat_exception_grade_data_all where subject!='grade' and school_management_type is not null group by school_management_type,district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name, school_latitude,school_longitude,grade,subject) union (select distinct school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id, school_name,grade,'grade' as subject,school_management_type, Count(DISTINCT(school_id)) AS Total_schools_with_missing_data,Count(DISTINCT(school_id)) AS total_schools, 0 as  Total_schools_with_missing_data_sub,0 as total_schools_sub from pat_exception_grade_data_all where subject ='grade' and school_management_type is not null group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,grade,school_management_type))as s group by school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,school_management_type "
    },
    {
        "pat_exception_management_grade_district_last_7_days": "select s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade,s.school_management_type, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data', percentage_schools_with_missing_data))) as subjects from(select a.district_latitude,a.district_longitude,a.district_id,a.district_name,a.grade,a.subject,a.total_schools, a.total_schools_not_received as Total_schools_with_missing_data, a.school_management_type, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data ,total_schools_not_received_sub,total_schools_sub from ((select a.school_management_type,a.district_id,district_name,district_latitude,district_longitude,a.grade,subject,0 as total_schools_not_received,NULL as total_schools,total_schools_not_received_sub,total_schools_sub from (select district_id,district_name,district_latitude,district_longitude,school_management_type,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from pat_exception_grade_data_last7 where subject !='grade' and school_management_type is not null group by district_id,district_name,district_latitude,district_longitude,grade,subject,school_management_type) as a inner join ( select district_id,count(distinct(shd.school_id)) as total_schools_sub,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id   where school_management_type is not null group by district_id,sg.grade,school_management_type) as b on a.district_id = b.district_id and a.school_management_type=b.school_management_type and a.grade=b.grade) union (select c.school_management_type,c.district_id,district_name,district_latitude,district_longitude,c.grade,subject, total_schools_with_missing_data_grade as total_schools_not_received,total_schools, 0 as  total_schools_not_received_sub,NULL as total_schools_sub from (select district_id,district_name,district_latitude,district_longitude,grade,subject, Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade,school_management_type from pat_exception_grade_data_last7 where subject ='grade' and school_management_type is not null group by district_id,district_name,district_latitude,district_longitude,grade,subject,school_management_type) as c inner join ( select district_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  where school_management_type is not null group by district_id,sg.grade,school_management_type )as d on c.district_id = d.district_id and c.school_management_type=d.school_management_type and c.grade=d.grade))as a)as s where s.school_management_type is not null group by s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade,s.school_management_type "
    },
    {
        "pat_exception_management_grade_block_last_7_days": "select s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade,s.school_management_type, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.block_latitude,a.block_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.grade,a.subject,a.total_schools, a.total_schools_not_received as Total_schools_with_missing_data, a.school_management_type, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data ,total_schools_not_received_sub,total_schools_sub from ((select a.school_management_type,district_id,district_name,a.block_id,block_name,block_latitude,block_longitude,a.grade,subject,0 as total_schools_not_received, NULL as total_schools,total_schools_not_received_sub,total_schools_sub from(select school_management_type,district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from pat_exception_grade_data_last7 where school_management_type is not null and subject !='grade' group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject,school_management_type) as a inner join (select block_id,count(distinct(shd.school_id)) as total_schools_sub,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  where school_management_type is not null group by block_id,sg.grade,school_management_type) as b on a.block_id = b.block_id and a.school_management_type=b.school_management_type and a.grade=b.grade) union (select c.school_management_type,district_id,district_name,c.block_id,block_name,block_latitude,block_longitude,c.grade,subject,total_schools_with_missing_data_grade as total_schools_not_received, total_schools, 0 as total_schools_not_received_sub, NULL as total_schools from(select school_management_type,district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject, Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from pat_exception_grade_data_last7 where subject ='grade'  and school_management_type is not null group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject,school_management_type)as c inner join (select block_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  where school_management_type is not null group by block_id,sg.grade,school_management_type)as d on c.block_id = d.block_id and c.school_management_type=d.school_management_type and c.grade=d.grade))as a)as s where s.school_management_type is not null group by s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade,s.school_management_type"
    },
    {
        "pat_exception_management_grade_cluster_last_7_days": "select s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade,s.school_management_type, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/cast(sum(s.total_schools) as numeric))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.cluster_id,a.cluster_name,a.grade,a.subject,a.total_schools, a.total_schools_not_received as Total_schools_with_missing_data,a.school_management_type,total_schools_not_received_sub,total_schools_sub, round((cast(a.total_schools_not_received_sub as numeric)/cast(a.total_schools_sub as numeric))*100.0,2) as percentage_schools_with_missing_data from (( select a.school_management_type,district_id,district_name,block_id,block_name,a.cluster_id,cluster_name,cluster_latitude,cluster_longitude, a.grade,subject,0 as total_schools_not_received,NULL as total_schools, total_schools_not_received_sub,total_schools_sub from (select school_management_type,district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from pat_exception_grade_data_last7 where subject !='grade' and school_management_type is not null group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject,school_management_type) as a inner join (select cluster_id,count(distinct(shd.school_id)) as total_schools_sub,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  where school_management_type is not null group by cluster_id,sg.grade,school_management_type) as b on a.cluster_id = b.cluster_id and a.school_management_type=b.school_management_type and a.grade=b.grade) union (select c.school_management_type,district_id,district_name,block_id,block_name,c.cluster_id,cluster_name,cluster_latitude,cluster_longitude,c.grade,subject, total_schools_with_missing_data_grade as total_schools_not_received,total_schools,0 as total_schools_not_received_sub,NULL as total_schools_sub from (select school_management_type,district_id,district_name,block_id, block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject, Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from pat_exception_grade_data_last7 where subject ='grade' and school_management_type is not null group by school_management_type,district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject)as c inner join (select cluster_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  where school_management_type is not null group by cluster_id,sg.grade,school_management_type)as d on c.cluster_id = d.cluster_id and c.school_management_type=d.school_management_type and c.grade=d.grade))as a)as s group by s.school_management_type,s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade "
    },
    {
        "pat_exception_management_grade_school_last_7_days": "select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,s.school_management_type, sum(s.Total_schools_with_missing_data) as Total_schools_with_missing_data,sum(s.total_schools) as total_schools, round(cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(case when total_schools=0 then NULL else total_schools end) as numeric),1)*100.0,2) as percentage_schools_with_missing_data , json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub, 'total_schools_with_missing_data', Total_schools_with_missing_data_sub))) as subjects from ((select distinct school_latitude,school_longitude,district_id,district_name,block_id,block_name, cluster_id,cluster_name,school_id,school_name,grade,subject,school_management_type, 0 as  Total_schools_with_missing_data,0 as total_schools,Count(DISTINCT(school_id)) AS Total_schools_with_missing_data_sub, Count(DISTINCT(school_id)) AS total_schools_sub from pat_exception_grade_data_last7 where subject!='grade' and school_management_type is not null group by school_management_type,district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name, school_latitude,school_longitude,grade,subject) union (select distinct school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id, school_name,grade,'grade' as subject,school_management_type, Count(DISTINCT(school_id)) AS Total_schools_with_missing_data,Count(DISTINCT(school_id)) AS total_schools, 0 as  Total_schools_with_missing_data_sub,0 as total_schools_sub from pat_exception_grade_data_last7 where subject ='grade' and school_management_type is not null group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,grade,school_management_type))as s group by school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,school_management_type "
    },
    {
        "pat_exception_management_grade_district_last_30_days": "select s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade,s.school_management_type, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data', percentage_schools_with_missing_data))) as subjects from(select a.district_latitude,a.district_longitude,a.district_id,a.district_name,a.grade,a.subject,a.total_schools, a.total_schools_not_received as Total_schools_with_missing_data, a.school_management_type, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data ,total_schools_not_received_sub,total_schools_sub from ((select a.school_management_type,a.district_id,district_name,district_latitude,district_longitude,a.grade,subject,0 as total_schools_not_received,NULL as total_schools,total_schools_not_received_sub,total_schools_sub from (select district_id,district_name,district_latitude,district_longitude,school_management_type,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from pat_exception_grade_data_last30 where subject !='grade' and school_management_type is not null group by district_id,district_name,district_latitude,district_longitude,grade,subject,school_management_type) as a inner join ( select district_id,count(distinct(shd.school_id)) as total_schools_sub,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id   where school_management_type is not null group by district_id,sg.grade,school_management_type) as b on a.district_id = b.district_id and a.school_management_type=b.school_management_type and a.grade=b.grade) union (select c.school_management_type,c.district_id,district_name,district_latitude,district_longitude,c.grade,subject, total_schools_with_missing_data_grade as total_schools_not_received,total_schools, 0 as  total_schools_not_received_sub,NULL as total_schools_sub from (select district_id,district_name,district_latitude,district_longitude,grade,subject, Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade,school_management_type from pat_exception_grade_data_last30 where subject ='grade' and school_management_type is not null group by district_id,district_name,district_latitude,district_longitude,grade,subject,school_management_type) as c inner join ( select district_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  where school_management_type is not null group by district_id,sg.grade,school_management_type )as d on c.district_id = d.district_id and c.school_management_type=d.school_management_type and c.grade=d.grade))as a)as s where s.school_management_type is not null group by s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade,s.school_management_type "
    },
    {
        "pat_exception_management_grade_block_last_30_days": "select s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade,s.school_management_type, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.block_latitude,a.block_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.grade,a.subject,a.total_schools, a.total_schools_not_received as Total_schools_with_missing_data, a.school_management_type, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data ,total_schools_not_received_sub,total_schools_sub from ((select a.school_management_type,district_id,district_name,a.block_id,block_name,block_latitude,block_longitude,a.grade,subject,0 as total_schools_not_received, NULL as total_schools,total_schools_not_received_sub,total_schools_sub from(select school_management_type,district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from pat_exception_grade_data_last30 where school_management_type is not null and subject !='grade' group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject,school_management_type) as a inner join (select block_id,count(distinct(shd.school_id)) as total_schools_sub,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  where school_management_type is not null group by block_id,sg.grade,school_management_type) as b on a.block_id = b.block_id and a.school_management_type=b.school_management_type and a.grade=b.grade) union (select c.school_management_type,district_id,district_name,c.block_id,block_name,block_latitude,block_longitude,c.grade,subject,total_schools_with_missing_data_grade as total_schools_not_received, total_schools, 0 as total_schools_not_received_sub, NULL as total_schools from(select school_management_type,district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject, Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from pat_exception_grade_data_last30 where subject ='grade'  and school_management_type is not null group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject,school_management_type)as c inner join (select block_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  where school_management_type is not null group by block_id,sg.grade,school_management_type)as d on c.block_id = d.block_id and c.school_management_type=d.school_management_type and c.grade=d.grade))as a)as s where s.school_management_type is not null group by s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade,s.school_management_type "
    },
    {
        "pat_exception_management_grade_cluster_last_30_days": "select s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade,s.school_management_type, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/cast(sum(s.total_schools) as numeric))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.cluster_id,a.cluster_name,a.grade,a.subject,a.total_schools, a.total_schools_not_received as Total_schools_with_missing_data,a.school_management_type,total_schools_not_received_sub,total_schools_sub, round((cast(a.total_schools_not_received_sub as numeric)/cast(a.total_schools_sub as numeric))*100.0,2) as percentage_schools_with_missing_data from (( select a.school_management_type,district_id,district_name,block_id,block_name,a.cluster_id,cluster_name,cluster_latitude,cluster_longitude, a.grade,subject,0 as total_schools_not_received,NULL as total_schools, total_schools_not_received_sub,total_schools_sub from (select school_management_type,district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from pat_exception_grade_data_last30 where subject !='grade' and school_management_type is not null group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject,school_management_type) as a inner join (select cluster_id,count(distinct(shd.school_id)) as total_schools_sub,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  where school_management_type is not null group by cluster_id,sg.grade,school_management_type) as b on a.cluster_id = b.cluster_id and a.school_management_type=b.school_management_type and a.grade=b.grade) union (select c.school_management_type,district_id,district_name,block_id,block_name,c.cluster_id,cluster_name,cluster_latitude,cluster_longitude,c.grade,subject, total_schools_with_missing_data_grade as total_schools_not_received,total_schools,0 as total_schools_not_received_sub,NULL as total_schools_sub from (select school_management_type,district_id,district_name,block_id, block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject, Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from pat_exception_grade_data_last30 where subject ='grade' and school_management_type is not null group by school_management_type,district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject)as c inner join (select cluster_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  where school_management_type is not null group by cluster_id,sg.grade,school_management_type)as d on c.cluster_id = d.cluster_id and c.school_management_type=d.school_management_type and c.grade=d.grade))as a)as s group by s.school_management_type,s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade "
    },
    {
        "pat_exception_management_grade_school_last_30_days": "select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,s.school_management_type, sum(s.Total_schools_with_missing_data) as Total_schools_with_missing_data,sum(s.total_schools) as total_schools, round(cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(case when total_schools=0 then NULL else total_schools end) as numeric),1)*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub, 'total_schools_with_missing_data', Total_schools_with_missing_data_sub))) as subjects from ((select distinct school_latitude,school_longitude,district_id,district_name,block_id,block_name, cluster_id,cluster_name,school_id,school_name,grade,subject,school_management_type, 0 as  Total_schools_with_missing_data,0 as total_schools,Count(DISTINCT(school_id)) AS Total_schools_with_missing_data_sub, Count(DISTINCT(school_id)) AS total_schools_sub from pat_exception_grade_data_last30 where subject!='grade' and school_management_type is not null group by school_management_type,district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name, school_latitude,school_longitude,grade,subject) union (select distinct school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id, school_name,grade,'grade' as subject,school_management_type, Count(DISTINCT(school_id)) AS Total_schools_with_missing_data,Count(DISTINCT(school_id)) AS total_schools, 0 as  Total_schools_with_missing_data_sub,0 as total_schools_sub from pat_exception_grade_data_last30 where subject ='grade' and school_management_type is not null group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,grade,school_management_type))as s group by school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,school_management_type"
    },
    {
        "pat_management_subject_all_footer_year_month": "select academic_year, grade, month, json_object_agg( subject_name, json_build_object( 'total_students', total_students, 'students_attended', students_attended, 'total_schools', total_schools ) order by subject_name ) as subjects, school_management_type from( select academic_year, cast('Grade ' || grade as text) as grade, cast(subject as text) as subject_name, trim( TO_CHAR( TO_DATE(date_part('month', exam_date)::text, 'MM'), 'Month' ) ) AS month, sum(students_count) as total_students, count(distinct school_id) as total_schools, sum(students_attended) as students_attended, school_management_type from periodic_exam_school_result where exam_code in (select exam_code from latest_data_to_be_processed_pat) or substring(exam_code,10,6) in (select substring(exam_code,10,6) from latest_data_to_be_processed_pat) group by academic_year, grade, subject, month, school_management_type order by grade desc, subject_name) as t group by grade, academic_year, month, school_management_type order by 1, grade; "
    },
    {
        "pat_management_subject_all_footer_last_30_days": "select academic_year, grade, json_object_agg( subject_name, json_build_object( 'total_students', total_students, 'students_attended', students_attended, 'total_schools', total_schools ) order by subject_name ) as subjects, school_management_type from( select academic_year, cast('Grade ' || grade as text) as grade, cast(subject as text) as subject_name, sum(students_count) as total_students, count(distinct school_id) as total_schools, sum(students_attended) as students_attended, school_management_type from periodic_exam_school_result where exam_code in  (select exam_code from pat_date_range where date_range='last30days') group by academic_year, grade, subject, school_management_type order by grade desc, subject_name) as t group by grade, academic_year, school_management_type order by 1, grade; "
    },
    {
        "pat_management_subject_all_footer_last_7_days": "select academic_year, grade, json_object_agg( subject_name, json_build_object( 'total_students', total_students, 'students_attended', students_attended, 'total_schools', total_schools ) order by subject_name ) as subjects, school_management_type from( select academic_year, cast('Grade ' || grade as text) as grade, cast(subject as text) as subject_name, sum(students_count) as total_students, count(distinct school_id) as total_schools, sum(students_attended) as students_attended, school_management_type from periodic_exam_school_result where exam_code in  (select exam_code from pat_date_range where date_range='last7days') group by academic_year, grade, subject, school_management_type order by grade desc, subject_name) as t group by grade, academic_year, school_management_type order by 1, grade;"
    },
    {
        "pat_management_subject_footer_district_last_30_days": "select district_id,school_management_type,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) from( select a.district_id,a.school_management_type,a.grade,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.district_id,sge.school_management_type,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,district_id,sge.school_id,school_management_type,grade from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, psr.school_management_type, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,district_id from periodic_exam_result_trans pert join periodic_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code where psr.exam_code in (select exam_code from pat_date_range where date_range='last30days') group by studying_class,subject,psr.school_id,academic_year,district_id,psr.school_management_type)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class and sge.school_management_type=res.school_management_type group by sge.district_id,grade,subject,sge.school_management_type) as a join (select distinct district_id,grade,students_attended,total_students,total_schools,school_management_type from periodic_grade_district_mgmt_last30 ) as b on a.district_id=b.district_id and a.grade=b.grade and a.school_management_type=b.school_management_type group by a.district_id,a.grade,a.school_management_type)as res group by district_id,school_management_type "
    },
    {
        "pat_management_subject_footer_block_last_30_days": "select block_id,school_management_type,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) from( select a.block_id,a.school_management_type,a.grade,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.block_id,sge.school_management_type,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,block_id,sge.school_id,school_management_type,grade from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, psr.school_management_type, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,block_id from periodic_exam_result_trans pert join periodic_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code where psr.exam_code in (select exam_code from pat_date_range where date_range='last30days') group by studying_class,subject,psr.school_id,academic_year,block_id,psr.school_management_type)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class and sge.school_management_type=res.school_management_type group by sge.block_id,grade,subject,sge.school_management_type) as a join (select distinct block_id,grade,students_attended,total_students,total_schools,school_management_type from periodic_grade_block_mgmt_last30 ) as b on a.block_id=b.block_id and a.grade=b.grade and a.school_management_type=b.school_management_type group by a.block_id,a.grade,a.school_management_type)as res group by block_id,school_management_type"
    },
    {
        "pat_management_subject_footer_cluster_last_30_days": "select cluster_id,school_management_type,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) from( select a.cluster_id,a.school_management_type,a.grade,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.cluster_id,sge.school_management_type,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,cluster_id,sge.school_id,school_management_type,grade from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, psr.school_management_type, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,cluster_id from periodic_exam_result_trans pert join periodic_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code where psr.exam_code in (select exam_code from pat_date_range where date_range='last30days') group by studying_class,subject,psr.school_id,academic_year,cluster_id,psr.school_management_type)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class and sge.school_management_type=res.school_management_type group by sge.cluster_id,grade,subject,sge.school_management_type) as a join (select distinct cluster_id,grade,students_attended,total_students,total_schools,school_management_type from periodic_grade_cluster_mgmt_last30 ) as b on a.cluster_id=b.cluster_id and a.grade=b.grade and a.school_management_type=b.school_management_type group by a.cluster_id,a.grade,a.school_management_type)as res group by cluster_id,school_management_type "
    },
    {
        "pat_management_subject_footer_school_last_30_days": "select school_id,school_management_type,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) from( select a.school_id,a.school_management_type,a.grade,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.school_id,sge.school_management_type,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,school_management_type,sge.school_id,grade from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, school_management_type, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id from periodic_exam_result_trans pert join periodic_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code where psr.exam_code in (select exam_code from pat_date_range where date_range='last30days') group by studying_class,subject,psr.school_id,academic_year,psr.school_management_type)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class and sge.school_management_type=res.school_management_type group by sge.school_id,grade,subject,sge.school_management_type) as a join (select distinct school_id,grade,students_attended,total_students,total_schools,school_management_type from periodic_grade_school_mgmt_last30 ) as b on a.school_id=b.school_id and a.grade=b.grade and a.school_management_type=b.school_management_type group by a.school_id,a.grade,a.school_management_type)as res group by school_id,school_management_type "
    },
    {
        "pat_management_subject_footer_district_last_7_days": "select district_id,school_management_type,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) from( select a.district_id,a.school_management_type,a.grade,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.district_id,sge.school_management_type,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,district_id,sge.school_id,school_management_type,grade from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, psr.school_management_type, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,district_id from periodic_exam_result_trans pert join periodic_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code where psr.exam_code in (select exam_code from pat_date_range where date_range='last7days') group by studying_class,subject,psr.school_id,academic_year,district_id,psr.school_management_type)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class and sge.school_management_type=res.school_management_type group by sge.district_id,grade,subject,sge.school_management_type) as a join (select distinct district_id,grade,students_attended,total_students,total_schools,school_management_type from periodic_grade_district_mgmt_last7 ) as b on a.district_id=b.district_id and a.grade=b.grade and a.school_management_type=b.school_management_type group by a.district_id,a.grade,a.school_management_type)as res group by district_id,school_management_type "
    },
    {
        "pat_management_subject_footer_block_last_7_days": "select block_id,school_management_type,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) from( select a.block_id,a.school_management_type,a.grade,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.block_id,sge.school_management_type,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,block_id,sge.school_id,school_management_type,grade from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, psr.school_management_type, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,block_id from periodic_exam_result_trans pert join periodic_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code where psr.exam_code in (select exam_code from pat_date_range where date_range='last7days') group by studying_class,subject,psr.school_id,academic_year,block_id,psr.school_management_type)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class and sge.school_management_type=res.school_management_type group by sge.block_id,grade,subject,sge.school_management_type) as a join (select distinct block_id,grade,students_attended,total_students,total_schools,school_management_type from periodic_grade_block_mgmt_last7 ) as b on a.block_id=b.block_id and a.grade=b.grade and a.school_management_type=b.school_management_type group by a.block_id,a.grade,a.school_management_type)as res group by block_id,school_management_type"
    },
    {
        "pat_management_subject_footer_cluster_last_7_days": "select cluster_id,school_management_type,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) from( select a.cluster_id,a.school_management_type,a.grade,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.cluster_id,sge.school_management_type,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,cluster_id,sge.school_id,school_management_type,grade from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, psr.school_management_type, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,cluster_id from periodic_exam_result_trans pert join periodic_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code where psr.exam_code in (select exam_code from pat_date_range where date_range='last7days') group by studying_class,subject,psr.school_id,academic_year,cluster_id,psr.school_management_type)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class and sge.school_management_type=res.school_management_type group by sge.cluster_id,grade,subject,sge.school_management_type) as a join (select distinct cluster_id,grade,students_attended,total_students,total_schools,school_management_type from periodic_grade_cluster_mgmt_last7 ) as b on a.cluster_id=b.cluster_id and a.grade=b.grade and a.school_management_type=b.school_management_type group by a.cluster_id,a.grade,a.school_management_type)as res group by cluster_id,school_management_type"
    },
    {
        "pat_management_subject_footer_school_last_7_days": "select school_id,school_management_type,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) from( select a.school_id,a.school_management_type,a.grade,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.school_id,sge.school_management_type,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,school_management_type,sge.school_id,grade from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, school_management_type, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id from periodic_exam_result_trans pert join periodic_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code where psr.exam_code in (select exam_code from pat_date_range where date_range='last7days') group by studying_class,subject,psr.school_id,academic_year,psr.school_management_type)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class and sge.school_management_type=res.school_management_type group by sge.school_id,grade,subject,sge.school_management_type) as a join (select distinct school_id,grade,students_attended,total_students,total_schools,school_management_type from periodic_grade_school_mgmt_last7 ) as b on a.school_id=b.school_id and a.grade=b.grade and a.school_management_type=b.school_management_type group by a.school_id,a.grade,a.school_management_type)as res group by school_id,school_management_type "
    },
    {
        "pat_management_subject_footer_district_year_month": "select district_id,school_management_type,academic_year,month,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) from( select a.district_id,a.school_management_type,a.month,a.academic_year,a.grade,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.district_id,sge.school_management_type,trim(TO_CHAR(TO_DATE (month::text, 'MM'), 'Month')) AS month,academic_year,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,district_id,sge.school_id,grade,school_management_type from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, academic_year,cast (substring (psr.exam_code,10,2) as integer) as month,school_management_type, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,district_id from periodic_exam_stud_grade_count pert join periodic_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code where psr.exam_code in (select exam_code from latest_data_to_be_processed_pat) or substring(psr.exam_code,10,6) in (select substring(exam_code,10,6) from latest_data_to_be_processed_pat) group by school_management_type,studying_class,subject,psr.school_id,academic_year,month,district_id)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class and sge.school_management_type=res.school_management_type group by sge.district_id,grade,subject,academic_year,month,sge.school_management_type) as a join (select distinct academic_year,month,district_id,grade,students_attended,total_students,total_schools,school_management_type from periodic_grade_district_mgmt_year_month) as b on a.district_id=b.district_id and a.grade=b.grade and a.academic_year=b.academic_year and a.month=b.month and a.school_management_type=b.school_management_type group by a.district_id,a.grade,a.academic_year,a.month,a.school_management_type)as res group by district_id,academic_year,month,school_management_type "
    },
    {
        "pat_management_subject_footer_block_year_month": "select block_id,school_management_type,academic_year,month,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) from( select a.block_id,a.school_management_type,a.month,a.academic_year,a.grade,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.block_id,sge.school_management_type,trim(TO_CHAR(TO_DATE (month::text, 'MM'), 'Month')) AS month,academic_year,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,block_id,sge.school_id,grade,school_management_type from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, academic_year,cast (substring (psr.exam_code,10,2) as integer) as month, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,block_id,school_management_type from periodic_exam_stud_grade_count pert join periodic_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code where psr.exam_code in (select exam_code from latest_data_to_be_processed_pat) or substring(psr.exam_code,10,6) in (select substring(exam_code,10,6) from latest_data_to_be_processed_pat) group by studying_class,subject,psr.school_id,academic_year,month,block_id,school_management_type)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class and sge.school_management_type=res.school_management_type group by sge.block_id,grade,subject,academic_year,month,sge.school_management_type) as a join (select distinct academic_year,month,block_id,grade,students_attended,total_students,total_schools,school_management_type from periodic_grade_block_mgmt_year_month) as b on a.block_id=b.block_id and a.grade=b.grade and a.academic_year=b.academic_year and a.month=b.month and a.school_management_type=b.school_management_type group by a.block_id,a.grade,a.academic_year,a.month,a.school_management_type)as res group by block_id,academic_year,month,school_management_type "
    },
    {
        "pat_management_subject_footer_cluster_year_month": "select cluster_id,academic_year,month,school_management_type,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) from( select a.cluster_id,a.month,a.academic_year,a.grade,a.school_management_type,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.cluster_id,sge.school_management_type,trim(TO_CHAR(TO_DATE (month::text, 'MM'), 'Month')) AS month,academic_year,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,cluster_id,sge.school_id,school_management_type,grade from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, academic_year,cast (substring (psr.exam_code,10,2) as integer) as month, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,cluster_id,school_management_type from periodic_exam_stud_grade_count pert join periodic_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code where psr.exam_code in (select exam_code from latest_data_to_be_processed_pat) or substring(psr.exam_code,10,6) in (select substring(exam_code,10,6) from latest_data_to_be_processed_pat) group by studying_class,subject,psr.school_id,academic_year,month,cluster_id,school_management_type)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class and sge.school_management_type=res.school_management_type group by sge.cluster_id,grade,subject,academic_year,month,sge.school_management_type) as a join (select distinct academic_year,month,cluster_id,grade,students_attended,total_students,total_schools,school_management_type from periodic_grade_cluster_mgmt_year_month) as b on a.cluster_id=b.cluster_id and a.grade=b.grade and a.academic_year=b.academic_year and a.month=b.month and a.school_management_type=b.school_management_type group by a.cluster_id,a.grade,a.academic_year,a.month,a.school_management_type)as res group by cluster_id,academic_year,month,school_management_type "
    },
    {
        "pat_management_subject_footer_school_year_month": "select school_id,academic_year,month,school_management_type,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) from( select a.school_id,a.month,a.academic_year,a.grade,a.school_management_type,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.school_id,sge.school_management_type,trim(TO_CHAR(TO_DATE (month::text, 'MM'), 'Month')) AS month,academic_year,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,sge.school_id,grade,school_management_type from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, academic_year,cast (substring (psr.exam_code,10,2) as integer) as month, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,psr.school_management_type from periodic_exam_stud_grade_count pert join periodic_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code where psr.exam_code in (select exam_code from latest_data_to_be_processed_pat) or substring(psr.exam_code,10,6) in (select substring(exam_code,10,6) from latest_data_to_be_processed_pat) group by studying_class,subject,psr.school_id,academic_year,month,school_management_type)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class and sge.school_management_type=res.school_management_type group by sge.school_id,grade,subject,academic_year,month,sge.school_management_type) as a join (select distinct academic_year,month,school_id,grade,students_attended,total_students,total_schools,school_management_type from periodic_grade_school_mgmt_year_month) as b on a.school_id=b.school_id and a.grade=b.grade and a.academic_year=b.academic_year and a.month=b.month and a.school_management_type=b.school_management_type group by a.school_id,a.grade,a.academic_year,a.month,a.school_management_type)as res group by school_id,academic_year,month,school_management_type"
    },
    {
        "pat_exam_district_all": "Select * from periodic_exam_district_all"
    },
    {
        "pat_grade_district_all": "Select * from periodic_grade_district_all"
    },
    {
        "pat_exam_block_all": "Select * from periodic_exam_block_all"
    },
    {
        "pat_grade_block_all": "Select * from periodic_grade_block_all"
    },
    {
        "pat_exam_cluster_all": "Select * from periodic_exam_cluster_all"
    },
    {
        "pat_grade_cluster_all": "Select * from periodic_grade_cluster_all"
    },
    {
        "pat_exam_school_all": "Select * from periodic_exam_school_all"
    },
    {
        "pat_grade_school_all": "Select * from periodic_grade_school_all"
    },
    {
        "pat_meta_all": "select json_object_agg(col,data) from ((select 'district' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from periodic_grade_district_all group by grade)as d)union(select 'block' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from periodic_grade_block_all group by grade)as d) union (select 'cluster' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from periodic_grade_cluster_all group by grade)as d)union(select 'school' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from periodic_grade_school_all group by grade)as d))as d"
    },
    {
        "pat_subject_all_footer_year_month": "select academic_year, grade, month, json_object_agg( subject_name, json_build_object( 'total_students', total_students, 'students_attended', students_attended, 'total_schools', total_schools ) order by subject_name ) as subjects from( select academic_year, cast('Grade ' || grade as text) as grade, cast(subject as text) as subject_name, trim( TO_CHAR( TO_DATE(date_part('month', exam_date)::text, 'MM'), 'Month' ) ) AS month, sum(students_count) as total_students, count(distinct school_id) as total_schools, sum(students_attended) as students_attended from periodic_exam_school_result where exam_code in (select exam_code from latest_data_to_be_processed_pat) or substring(exam_code,10,6) in (select substring(exam_code,10,6) from latest_data_to_be_processed_pat) group by academic_year, grade, subject, month order by grade desc, subject_name) as t group by grade, academic_year, month order by 1, grade;"
    },
    {
        "pat_subject_all_footer_last_30_days": "select academic_year, grade, json_object_agg( subject_name, json_build_object( 'total_students', total_students, 'students_attended', students_attended, 'total_schools', total_schools ) order by subject_name ) as subjects from( select academic_year, cast('Grade ' || grade as text) as grade, cast(subject as text) as subject_name, sum(students_count) as total_students, count(distinct school_id) as total_schools, sum(students_attended) as students_attended from periodic_exam_school_result where exam_code in  (select exam_code from pat_date_range where date_range='last30days') group by academic_year, grade, subject order by grade desc, subject_name) as t group by grade, academic_year order by 1, grade;"
    },
    {
        "pat_subject_all_footer_last_7_days": "select academic_year, grade, json_object_agg( subject_name, json_build_object( 'total_students', total_students, 'students_attended', students_attended, 'total_schools', total_schools ) order by subject_name ) as subjects from( select academic_year, cast('Grade ' || grade as text) as grade, cast(subject as text) as subject_name, sum(students_count) as total_students, count(distinct school_id) as total_schools, sum(students_attended) as students_attended from periodic_exam_school_result where exam_code in  (select exam_code from pat_date_range where date_range='last7days') group by academic_year, grade, subject order by grade desc, subject_name) as t group by grade, academic_year order by 1, grade;"
    },
    {
        "pat_exam_district_last30": "Select * from periodic_exam_district_last30"
    },
    {
        "pat_grade_district_last30": "Select * from periodic_grade_district_last30"
    },
    {
        "pat_exam_block_last30": "Select * from periodic_exam_block_last30"
    },
    {
        "pat_grade_block_last30": "Select * from periodic_grade_block_last30"
    },
    {
        "pat_exam_cluster_last30": "Select * from periodic_exam_cluster_last30"
    },
    {
        "pat_grade_cluster_last30": "Select * from periodic_grade_cluster_last30"
    },
    {
        "pat_exam_school_last30": "Select * from periodic_exam_school_last30"
    },
    {
        "pat_grade_school_last30": "Select * from periodic_grade_school_last30"
    },
    {
        "pat_meta_last30": "select json_object_agg(col,data) from  ((select 'district' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from periodic_grade_district_all group by grade)as d) union (select 'block' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from periodic_grade_block_all group by grade)as d) union (select 'cluster' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from periodic_grade_cluster_all group by grade)as d) union (select 'school' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from periodic_grade_school_all group by grade)as d))as d"
    },
    {
        "pat_exam_district_last7": "Select * from periodic_exam_district_last7"
    },
    {
        "pat_grade_district_last7": "Select * from periodic_grade_district_last7"
    },
    {
        "pat_exam_block_last7": "Select * from periodic_exam_block_last7"
    },
    {
        "pat_grade_block_last7": "Select * from periodic_grade_block_last7"
    },
    {
        "pat_exam_cluster_last7": "Select * from periodic_exam_cluster_last7"
    },
    {
        "pat_grade_cluster_last7": "Select * from periodic_grade_cluster_last7"
    },
    {
        "pat_exam_school_last7": "Select * from periodic_exam_school_last7"
    },
    {
        "pat_grade_school_last7": "Select * from periodic_grade_school_last7"
    },
    {
        "pat_meta_last7": "select json_object_agg(col,data) from  ((select 'district' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from periodic_grade_district_all group by grade)as d) union (select 'block' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from periodic_grade_block_all group by grade)as d) union (select 'cluster' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from periodic_grade_cluster_all group by grade)as d) union (select 'school' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from periodic_grade_school_all group by grade)as d))as d"
    },
    {
        "pat_meta_by_year_month": "select a.academic_year,jsonb_agg(a.month) as month from (select distinct academic_year,TO_CHAR(TO_DATE(date_part('month',exam_date)::text, 'MM'), 'Month') AS month from periodic_exam_school_result order by academic_year,month) as a group by academic_year;"
    },
    {
        "pat_meta_grade_by_year_month": "select 'district' as level,grade,academic_year,month from periodic_grade_district_year_month group by grade,academic_year,month union select 'block' as level,grade,academic_year,month from periodic_grade_block_year_month group by grade,academic_year,month union select 'cluster' as level,grade,academic_year,month from periodic_grade_cluster_year_month group by grade,academic_year,month union select 'school' as level,grade,academic_year,month from periodic_grade_school_year_month group by grade,academic_year,month"
    },
    {
        "pat_exam_school_by_year_month": "Select * from periodic_exam_school_year_month"
    },
    {
        "pat_exam_cluster_by_year_month": "Select * from periodic_exam_cluster_year_month"
    },
    {
        "pat_exam_block_by_year_month": "Select * from periodic_exam_block_year_month"
    },
    {
        "pat_exam_district_by_year_month": "Select * from periodic_exam_district_year_month"
    },
    {
        "pat_grade_school_by_year_month": "Select * from periodic_grade_school_year_month"
    },
    {
        "pat_grade_cluster_by_year_month": "Select * from periodic_grade_cluster_year_month"
    },
    {
        "pat_grade_block_by_year_month": "Select * from periodic_grade_block_year_month"
    },
    {
        "pat_grade_district_by_year_month": "Select * from periodic_grade_district_year_month"
    },
    {
        "pat_subject_footer_district_last_30_days": "select district_id,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) from( select a.district_id,a.grade,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.district_id,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,district_id,sge.school_id,grade from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,district_id from periodic_exam_result_trans pert join periodic_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code where psr.exam_code in (select exam_code from pat_date_range where date_range='last30days') group by studying_class,subject,psr.school_id,academic_year,district_id)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class group by sge.district_id,grade,subject) as a join (select distinct district_id,grade,students_attended,total_students,total_schools from periodic_grade_district_last30 ) as b on a.district_id=b.district_id and a.grade=b.grade group by a.district_id,a.grade)as res group by district_id "
    },
    {
        "pat_subject_footer_block_last_30_days": "select block_id,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) from( select a.block_id,a.grade,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.block_id,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,block_id,sge.school_id,grade from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,block_id from periodic_exam_result_trans pert join periodic_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code where psr.exam_code in (select exam_code from pat_date_range where date_range='last30days') group by studying_class,subject,psr.school_id,academic_year,block_id)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class group by sge.block_id,grade,subject) as a join (select distinct block_id,grade,students_attended,total_students,total_schools from periodic_grade_block_last30 ) as b on a.block_id=b.block_id and a.grade=b.grade group by a.block_id,a.grade)as res group by block_id "
    },
    {
        "pat_subject_footer_cluster_last_30_days": "select cluster_id,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) from( select a.cluster_id,a.grade,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.cluster_id,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,cluster_id,sge.school_id,grade from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,cluster_id from periodic_exam_result_trans pert join periodic_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code where psr.exam_code in (select exam_code from pat_date_range where date_range='last30days') group by studying_class,subject,psr.school_id,academic_year,cluster_id)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class group by sge.cluster_id,grade,subject) as a join (select distinct cluster_id,grade,students_attended,total_students,total_schools from periodic_grade_cluster_last30 ) as b on a.cluster_id=b.cluster_id and a.grade=b.grade group by a.cluster_id,a.grade)as res group by cluster_id "
    },
    {
        "pat_subject_footer_school_last_30_days": "select school_id,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) from( select a.school_id,a.grade,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.school_id,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,sge.school_id,grade from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id from periodic_exam_result_trans pert join periodic_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code where psr.exam_code in (select exam_code from pat_date_range where date_range='last30days') group by studying_class,subject,psr.school_id,academic_year)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class group by sge.school_id,grade,subject) as a join (select distinct school_id,grade,students_attended,total_students,total_schools from periodic_grade_school_last30 ) as b on a.school_id=b.school_id and a.grade=b.grade group by a.school_id,a.grade)as res group by school_id "
    },
    {
        "pat_subject_footer_district_last_7_days": "select district_id,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) from( select a.district_id,a.grade,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.district_id,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,district_id,sge.school_id,grade from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,district_id from periodic_exam_result_trans pert join periodic_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code where psr.exam_code in (select exam_code from pat_date_range where date_range='last7days') group by studying_class,subject,psr.school_id,academic_year,district_id)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class group by sge.district_id,grade,subject) as a join (select distinct district_id,grade,students_attended,total_students,total_schools from periodic_grade_district_last7 ) as b on a.district_id=b.district_id and a.grade=b.grade group by a.district_id,a.grade)as res group by district_id "
    },
    {
        "pat_subject_footer_block_last_7_days": "select block_id,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) from( select a.block_id,a.grade,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.block_id,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,block_id,sge.school_id,grade from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,block_id from periodic_exam_result_trans pert join periodic_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code where psr.exam_code in (select exam_code from pat_date_range where date_range='last7days') group by studying_class,subject,psr.school_id,academic_year,block_id)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class group by sge.block_id,grade,subject) as a join (select distinct block_id,grade,students_attended,total_students,total_schools from periodic_grade_block_last7 ) as b on a.block_id=b.block_id and a.grade=b.grade group by a.block_id,a.grade)as res group by block_id "
    },
    {
        "pat_subject_footer_cluster_last_7_days": "select cluster_id,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) from( select a.cluster_id,a.grade,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.cluster_id,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,cluster_id,sge.school_id,grade from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,cluster_id from periodic_exam_result_trans pert join periodic_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code where psr.exam_code in (select exam_code from pat_date_range where date_range='last7days') group by studying_class,subject,psr.school_id,academic_year,cluster_id)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class group by sge.cluster_id,grade,subject) as a join (select distinct cluster_id,grade,students_attended,total_students,total_schools from periodic_grade_cluster_last7 ) as b on a.cluster_id=b.cluster_id and a.grade=b.grade group by a.cluster_id,a.grade)as res group by cluster_id "
    },
    {
        "pat_subject_footer_school_last_7_days": "select school_id,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) from( select a.school_id,a.grade,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.school_id,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,sge.school_id,grade from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id from periodic_exam_result_trans pert join periodic_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code where psr.exam_code in (select exam_code from pat_date_range where date_range='last7days') group by studying_class,subject,psr.school_id,academic_year)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class group by sge.school_id,grade,subject) as a join (select distinct school_id,grade,students_attended,total_students,total_schools from periodic_grade_school_last7 ) as b on a.school_id=b.school_id and a.grade=b.grade group by a.school_id,a.grade)as res group by school_id "
    },
    {
        "pat_subject_footer_district_year_month": "select district_id,academic_year,month,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) from( select a.district_id,a.month,a.academic_year,a.grade,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.district_id,trim(TO_CHAR(TO_DATE (month::text, 'MM'), 'Month')) AS month,academic_year,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,district_id,sge.school_id,grade from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, academic_year,cast (substring (psr.exam_code,10,2) as integer) as month, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,district_id from periodic_exam_stud_grade_count pert join periodic_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code where psr.exam_code in (select exam_code from latest_data_to_be_processed_pat) or substring(psr.exam_code,10,6) in (select substring(exam_code,10,6) from latest_data_to_be_processed_pat) group by studying_class,subject,psr.school_id,academic_year,month,district_id)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class group by sge.district_id,grade,subject,academic_year,month) as a join (select distinct academic_year,month,district_id,grade,students_attended,total_students,total_schools from periodic_grade_district_year_month) as b on a.district_id=b.district_id and a.grade=b.grade and a.academic_year=b.academic_year and a.month=b.month group by a.district_id,a.grade,a.academic_year,a.month)as res group by district_id,academic_year,month "
    },
    {
        "pat_subject_footer_block_year_month": "select block_id,academic_year,month,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) from( select a.block_id,a.month,a.academic_year,a.grade,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.block_id,trim(TO_CHAR(TO_DATE (month::text, 'MM'), 'Month')) AS month,academic_year,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,block_id,sge.school_id,grade from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, academic_year,cast (substring (psr.exam_code,10,2) as integer) as month, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,block_id from periodic_exam_stud_grade_count pert join periodic_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code where psr.exam_code in (select exam_code from latest_data_to_be_processed_pat) or substring(psr.exam_code,10,6) in (select substring(exam_code,10,6) from latest_data_to_be_processed_pat) group by studying_class,subject,psr.school_id,academic_year,month,block_id)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class group by sge.block_id,grade,subject,academic_year,month) as a join (select distinct academic_year,month,block_id,grade,students_attended,total_students,total_schools from periodic_grade_block_year_month) as b on a.block_id=b.block_id and a.grade=b.grade and a.academic_year=b.academic_year and a.month=b.month group by a.block_id,a.grade,a.academic_year,a.month)as res group by block_id,academic_year,month "
    },
    {
        "pat_subject_footer_cluster_year_month": "select cluster_id,academic_year,month,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) from( select a.cluster_id,a.month,a.academic_year,a.grade,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.cluster_id,trim(TO_CHAR(TO_DATE (month::text, 'MM'), 'Month')) AS month,academic_year,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,cluster_id,sge.school_id,grade from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, academic_year,cast (substring (psr.exam_code,10,2) as integer) as month, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id,cluster_id from periodic_exam_stud_grade_count pert join periodic_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code where psr.exam_code in (select exam_code from latest_data_to_be_processed_pat) or substring(psr.exam_code,10,6) in (select substring(exam_code,10,6) from latest_data_to_be_processed_pat) group by studying_class,subject,psr.school_id,academic_year,month,cluster_id)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class group by sge.cluster_id,grade,subject,academic_year,month) as a join (select distinct academic_year,month,cluster_id,grade,students_attended,total_students,total_schools from periodic_grade_cluster_year_month) as b on a.cluster_id=b.cluster_id and a.grade=b.grade and a.academic_year=b.academic_year and a.month=b.month group by a.cluster_id,a.grade,a.academic_year,a.month)as res group by cluster_id,academic_year,month "
    },
    {
        "pat_subject_footer_school_year_month": "select school_id,academic_year,month,json_object_agg(grade,json_build_object('subject',subject,'total_students',res.total_students,'students_attended',res.students_attended,'total_schools',res.total_schools)) from( select a.school_id,a.month,a.academic_year,a.grade,json_object_agg(subject,json_build_object('total_students',a.total_students,'students_attended',a.students_attended,'total_schools',a.total_schools) order by subject) as subject,max(b.total_students) as total_students,max(b.students_attended) as students_attended,max(b.total_schools) as total_schools  from (select sge.school_id,trim(TO_CHAR(TO_DATE (month::text, 'MM'), 'Month')) AS month,academic_year,concat('Grade ',grade) as grade,subject,sum(students_count) as total_students,sum(students_attended) as students_attended,sum(total_schools) as total_schools from (select students_count,sge.school_id,grade from school_grade_enrolment  sge join school_hierarchy_details shd on sge.school_id=shd.school_id)as sge join (select count(distinct student_uid) as students_attended, academic_year,cast (substring (psr.exam_code,10,2) as integer) as month, count(distinct pert.school_id) as total_schools,studying_class,subject,psr.school_id from periodic_exam_stud_grade_count pert join periodic_exam_school_result psr on pert.school_id=psr.school_id and pert.exam_code =psr.exam_code where psr.exam_code in (select exam_code from latest_data_to_be_processed_pat) or substring(psr.exam_code,10,6) in (select substring(exam_code,10,6) from latest_data_to_be_processed_pat) group by studying_class,subject,psr.school_id,academic_year,month)as res  on sge.school_id=res.school_id and sge.grade=res.studying_class group by sge.school_id,grade,subject,academic_year,month) as a join (select distinct academic_year,month,school_id,grade,students_attended,total_students,total_schools from periodic_grade_school_year_month) as b on a.school_id=b.school_id and a.grade=b.grade and a.academic_year=b.academic_year and a.month=b.month group by a.school_id,a.grade,a.academic_year,a.month)as res group by school_id,academic_year,month"
    },
    {
        "pat_learning_outcome_p1_question_meta": "select replace(json_agg(pat_meta)::text,'\\','') as pat_meta from (select json_build_object('academic_year',academic_year,'data',json_object_agg(col,data))as pat_meta from (select 'months' as col,data::text,academic_year from (select json_object_agg(month,data) as data,academic_year from (select json_object_agg(col,data)as data,academic_year,rtrim(ltrim(month))as month from (select 'examDate' as col,json_agg(json_build_object('exam_date',exam_date))::jsonb as data,academic_year,month from (select to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,academic_year,TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month') as month from periodic_exam_school_qst_result group by exam_date,academic_year)as d group by academic_year,month)as a group by month,academic_year order by to_date(month,'Month'))as a group by academic_year)as d union (select 'grades' as col,json_agg(json_build_object('grade',grade))::text as data,academic_year from (select grade,academic_year from periodic_exam_school_qst_result group by grade,academic_year)as d group by academic_year) union (select 'subjects' as col,json_agg(json_build_object('subject',subject))::text as data,academic_year from (select subject,academic_year from periodic_exam_school_qst_result group by subject,academic_year)as d group by academic_year))as d group by academic_year)as org"
    },
    {
        "pat_learning_outcome_p1_question_cluster": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,block_id,block_name,cluster_id,cluster_name,school_id,school_name,question_id as indicator_id,district_id,district_name,question_id,indicator,sum(students_attended) as students_attended,rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month,round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(total_marks),0),0),1)as marks,round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage,count(school_id) as total_schools,sum(total_students) as total_students from periodic_exam_school_qst_result where  exam_code in (select exam_code from latest_data_to_be_processed_pat) or substring(exam_code,10,6) in (select substring(exam_code,10,6) from latest_data_to_be_processed_pat) group by academic_year,grade,subject,exam_date,block_id,block_name,cluster_id,cluster_name,school_id,school_name,district_id,district_name,question_id,indicator order by district_id,block_id,cluster_id,school_id,question_id "
    },
    {
        "pat_learning_outcome_p1_question_all": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,district_id,district_name,question_id,indicator,question_id as indicator_id,sum(students_attended) as students_attended,rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month,round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(total_marks),0),0),1)as marks,round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage,count(school_id) as total_schools,sum(total_students) as total_students from periodic_exam_school_qst_result where  exam_code in (select exam_code from latest_data_to_be_processed_pat) or substring(exam_code,10,6) in (select substring(exam_code,10,6) from latest_data_to_be_processed_pat) group by academic_year,grade,subject,exam_date,district_id,district_name,question_id,indicator order by district_id,question_id "
    },
    {
        "pat_learning_outcome_p1_question_district": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,block_id,block_name,district_id,district_name,question_id,indicator,question_id as indicator_id,sum(students_attended) as students_attended,rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month,round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(total_marks),0),0),1)as marks,round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage,count(school_id) as total_schools,sum(total_students) as total_students from periodic_exam_school_qst_result where exam_code in (select exam_code from latest_data_to_be_processed_pat) or substring(exam_code,10,6) in (select substring(exam_code,10,6) from latest_data_to_be_processed_pat) group by academic_year,grade,subject,exam_date,block_id,block_name,district_id,district_name,question_id,indicator order by district_id,block_id,question_id "
    },
    {
        "pat_learning_outcome_p1_question_block": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,block_id,block_name,cluster_id,cluster_name,district_id,district_name,question_id,indicator,question_id as indicator_id,sum(students_attended) as students_attended,rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month,round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(total_marks),0),0),1)as marks,round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage,count(school_id) as total_schools,sum(total_students) as total_students from periodic_exam_school_qst_result where exam_code in (select exam_code from latest_data_to_be_processed_pat) or substring(exam_code,10,6) in (select substring(exam_code,10,6) from latest_data_to_be_processed_pat) group by academic_year,grade,subject,exam_date,block_id,block_name,cluster_id,cluster_name,district_id,district_name,question_id,indicator order by district_id,block_id,cluster_id,question_id "
    },
    {
        "pat_learning_outcome_p1_indicator_all": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,district_id,district_name,indicator,sum(students_attended) as students_attended,rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month,round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(total_marks),0),0),1)as marks,round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage,count(school_id) as total_schools,sum(total_students) as total_students from periodic_exam_school_ind_result group by academic_year,grade,subject,exam_date,district_id,district_name,indicator order by district_id "
    },
    
    {
        "pat_learning_outcome_p1_indicator_district": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,block_id,block_name,district_id,district_name,indicator,sum(students_attended) as students_attended,rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month,round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(total_marks),0),0),1)as marks,round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage,count(school_id) as total_schools,sum(total_students) as total_students from periodic_exam_school_ind_result group by academic_year,grade,subject,exam_date,block_id,block_name,district_id,district_name,indicator order by district_id,block_id "
    },
    {
        "pat_learning_outcome_p1_indicator_block": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,block_id,block_name,cluster_id,cluster_name,district_id,district_name,indicator,sum(students_attended) as students_attended,rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month,round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(total_marks),0),0),1)as marks,round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage,count(school_id) as total_schools,sum(total_students) as total_students from periodic_exam_school_ind_result group by academic_year,grade,subject,exam_date,block_id,block_name,cluster_id,cluster_name,district_id,district_name,indicator order by district_id,block_id,cluster_id "
    },
    {
        "pat_learning_outcome_p1_indicator_cluster": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,block_id,block_name,cluster_id,cluster_name,school_id,school_name,district_id,district_name,indicator,sum(students_attended) as students_attended,rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'),'Month')))as month,round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(total_marks),0),0),1)as marks,round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage,count(school_id) as total_schools,sum(total_students) as total_students from periodic_exam_school_ind_result group by academic_year,grade,subject,exam_date,block_id,block_name,cluster_id,cluster_name,school_id,school_name,district_id,district_name,indicator order by district_id,block_id,cluster_id,school_id"
    },
    {
        "pat_learning_outcome_p3_all": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,district_id,district_name,sum(students_attended) as students_attended,rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month,round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(total_marks),0),0),1)as marks,round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage,count(school_id)as total_schools,sum(students_count) as total_students from periodic_exam_school_result where students_attended>0 and exam_code in (select exam_code from latest_data_to_be_processed_pat) or substring(exam_code,10,6) in (select substring(exam_code,10,6) from latest_data_to_be_processed_pat) group by academic_year,grade,subject,exam_date,district_id,district_name order by district_id,grade,subject_name "
    },
    {
        "pat_learning_outcome_p3_district": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,block_id,block_name,district_id,district_name,sum(students_attended) as students_attended,rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month,round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(total_marks),0),0),1)as marks,round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage,count(school_id) as total_schools,sum(students_count) as total_students from periodic_exam_school_result where students_attended>0 and exam_code in (select exam_code from latest_data_to_be_processed_pat) or substring(exam_code,10,6) in (select substring(exam_code,10,6) from latest_data_to_be_processed_pat) group by academic_year,grade,subject,exam_date,block_id,block_name,district_id,district_name order by district_id,block_id "
    },
    {
        "pat_learning_outcome_p3_block": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,block_id,block_name,cluster_id,cluster_name,district_id,district_name,sum(students_attended) as students_attended,rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month,round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(total_marks),0),0),1)as marks,round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage,count(school_id) as total_schools,sum(students_count) as total_students from periodic_exam_school_result where students_attended>0 and exam_code in (select exam_code from latest_data_to_be_processed_pat) or substring(exam_code,10,6) in (select substring(exam_code,10,6) from latest_data_to_be_processed_pat) group by academic_year,grade,subject,exam_date,block_id,block_name,cluster_id,cluster_name,district_id,district_name order by district_id,block_id,cluster_id "
    },
    {
        "pat_learning_outcome_p3_cluster": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,block_id,block_name,cluster_id,cluster_name,school_id,school_name,district_id,district_name,sum(students_attended) as students_attended,rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month,round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(total_marks),0),0),1)as marks,round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage,count(school_id) as total_schools,sum(students_count) as total_students from periodic_exam_school_result where students_attended>0 and exam_code in (select exam_code from latest_data_to_be_processed_pat) or substring(exam_code,10,6) in (select substring(exam_code,10,6) from latest_data_to_be_processed_pat)  group by academic_year,grade,subject,exam_date,block_id,block_name,cluster_id,cluster_name,school_id,school_name,district_id,district_name order by district_id,block_id,cluster_id,school_id "
    },
    {
        "pat_exception_district_all": "select a.district_latitude,a.district_longitude,a.district_id,a.district_name,b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,district_latitude,district_longitude,Count(DISTINCT(school_id)) AS total_schools_not_received from pat_exception_data_all group by district_id,district_name,district_latitude,district_longitude) as a join (select district_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by district_id)as b on a.district_id=b.district_id"
    },
    {
        "pat_exception_block_all": "select a.block_latitude,a.block_longitude,a.district_id,a.district_name,a.block_id,a.block_name,b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,block_id,block_name,block_latitude,block_longitude,Count(DISTINCT(school_id)) AS total_schools_not_received from pat_exception_data_all group by district_id,district_name,block_id,block_name,block_latitude,block_longitude) as a join (select block_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by block_id)as b on a.block_id=b.block_id"
    },
    {
        "pat_exception_cluster_all": "select a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.cluster_id,a.cluster_name,b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,Count(DISTINCT(school_id)) AS total_schools_not_received from pat_exception_data_all group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude) as a join (select cluster_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by cluster_id)as b on a.cluster_id=b.cluster_id"
    },
    {
        "pat_exception_school_all": "select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,Count(DISTINCT(school_id)) AS Total_schools_with_missing_data from pat_exception_data_all group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude"
    },
    {
        "pat_exception_district_last_7_days": "select a.district_latitude,a.district_longitude,a.district_id,a.district_name,b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,district_latitude,district_longitude,Count(DISTINCT(school_id)) AS total_schools_not_received from pat_exception_data_last7 group by district_id,district_name,district_latitude,district_longitude)as a join (select district_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by district_id)as b on a.district_id=b.district_id"
    },
    {
        "pat_exception_block_last_7_days": "select a.block_latitude,a.block_longitude,a.district_id,a.district_name,a.block_id,a.block_name,b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,block_id,block_name,block_latitude,block_longitude,Count(DISTINCT(school_id)) AS total_schools_not_received from pat_exception_data_last7 group by district_id,district_name,block_id,block_name,block_latitude,block_longitude)as a join (select block_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by block_id)as b on a.block_id=b.block_id"
    },
    {
        "pat_exception_cluster_last_7_days": "select a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.cluster_id,a.cluster_name,b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,Count(DISTINCT(school_id)) AS total_schools_not_received from pat_exception_data_last7 group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude) as a join (select cluster_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by cluster_id)as b on a.cluster_id=b.cluster_id"
    },
    {
        "pat_exception_school_last_7_days": "select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,Count(DISTINCT(school_id)) AS Total_schools_with_missing_data from pat_exception_data_last7 group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude"
    },
    {
        "pat_exception_district_last_30_days": "select a.district_latitude,a.district_longitude,a.district_id,a.district_name,b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,district_latitude,district_longitude,Count(DISTINCT(school_id)) AS total_schools_not_received from pat_exception_data_last30 group by district_id,district_name,district_latitude,district_longitude)as a join (select district_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by district_id)as b on a.district_id=b.district_id"
    },
    {
        "pat_exception_block_last_30_days": "select a.block_latitude,a.block_longitude,a.district_id,a.district_name,a.block_id,a.block_name,b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,block_id,block_name,block_latitude,block_longitude,Count(DISTINCT(school_id)) AS total_schools_not_received from pat_exception_data_last30 group by district_id,district_name,block_id,block_name,block_latitude,block_longitude)as a join (select block_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by block_id)as b on a.block_id=b.block_id"
    },
    {
        "pat_exception_cluster_last_30_days": "select a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.cluster_id,a.cluster_name,b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,Count(DISTINCT(school_id)) AS total_schools_not_received from pat_exception_data_last30 group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude)as a join (select cluster_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by cluster_id)as b on a.cluster_id=b.cluster_id"
    },
    {
        "pat_exception_school_last_30_days": "select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,Count(DISTINCT(school_id)) AS Total_schools_with_missing_data from pat_exception_data_last30 group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude"
    },
    {
        "pat_exception_grade_district_all": "select s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade, sum(Total_schools_with_missing_data) as Total_schools_with_missing_data,sum(total_schools) as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', s.total_schools_sub,'total_schools_with_missing_data', s.total_schools_not_received_sub, 'percentage_schools_with_missing_data',s.percentage_schools_with_missing_data))) as subjects from (select a.district_latitude,a.district_longitude,a.district_id,a.district_name,a.grade,a.subject,a.total_schools, a.total_schools_not_received as Total_schools_with_missing_data,a.total_schools_sub,a.total_schools_not_received_sub, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data from (( select a.district_id,district_name,district_latitude,district_longitude,a.grade,a.subject,0 as total_schools_not_received,NULL as total_schools,total_schools_not_received_sub,total_schools_sub from(select district_id,district_name,district_latitude,district_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from pat_exception_grade_data_all where subject !='grade' group by district_id,district_name,district_latitude,district_longitude,grade,subject) as a inner join  (select district_id,count(distinct(shd.school_id)) as total_schools_sub,concat ('Grade ',sg.grade) as grade,subject from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  inner join subject_details sd on  sg.grade=sd.grade group by district_id,sg.grade,sd.subject) as b on a.district_id=b.district_id and a.grade=b.grade  and a.subject=b.subject) union (select c.district_id,district_name,district_latitude,district_longitude,c.grade,subject,total_schools_with_missing_data_grade as total_schools_not_received, total_schools ,0 as total_schools_not_received_sub, NULL  as total_schools_sub from(select district_id,district_name,district_latitude,district_longitude,grade,subject,Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from pat_exception_grade_data_all where trim(subject) ='grade' group by district_id,district_name,district_latitude,district_longitude,grade,subject)as c inner join (select district_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by district_id,sg.grade)as d on c.district_id = d.district_id and c.grade=d.grade))as a)as s group by s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade order by district_id "
    },
    {
        "pat_exception_grade_block_all": "select s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', Total_schools_with_missing_data_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from ( select a.block_latitude,a.block_longitude,a.district_id, a.district_name,a.block_id,a.block_name,a.grade,a.subject,a.total_schools,a.total_schools_not_received as Total_schools_with_missing_data, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data,total_schools_sub,total_schools_not_received_sub  as Total_schools_with_missing_data_sub from ((select district_id,district_name,a.block_id,block_name,block_latitude,block_longitude,a.grade,subject,0 as total_schools_not_received,NULL as total_schools,total_schools_not_received_sub,total_schools_sub from(select district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from pat_exception_grade_data_all where subject !='grade' group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject) as a inner join  (select block_id,count(distinct(shd.school_id)) as total_schools_sub,concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by block_id,sg.grade) as b on a.block_id = b.block_id and a.grade=b.grade) union (select district_id,district_name,c.block_id,block_name,block_latitude,block_longitude,c.grade,subject,total_schools_with_missing_data_grade as total_schools_not_received, total_schools,0 as total_schools_not_received_sub, NULL  as total_schools_sub from(select district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject, Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from pat_exception_grade_data_all where subject ='grade' group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject)as c inner join (select block_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by block_id,sg.grade)as d on c.block_id = d.block_id and c.grade=d.grade))as a)as s group by s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade  order by block_id "
    },
    {
        "pat_exception_grade_cluster_all": "select s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools',total_schools_sub,'total_schools_with_missing_data', Total_schools_with_missing_data_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.cluster_id,a.cluster_name,a.grade,a.subject,a.total_schools, a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data,total_schools_not_received_sub as Total_schools_with_missing_data_sub,total_schools_sub from ((select district_id,district_name,block_id,block_name,a.cluster_id,cluster_name,cluster_latitude,cluster_longitude,a.grade,subject,0 as total_schools_not_received,NULL as total_schools,total_schools_not_received_sub,total_schools_sub from(select district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from pat_exception_grade_data_all where subject !='grade' group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject) as a inner join (select cluster_id,count(distinct(shd.school_id)) as total_schools_sub,concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by cluster_id,sg.grade) as b on a.cluster_id = b.cluster_id and a.grade=b.grade) union (select district_id,district_name,block_id,block_name,c.cluster_id,cluster_name,cluster_latitude,cluster_longitude,c.grade,subject, total_schools_with_missing_data_grade as total_schools_not_received,total_schools, 0 as total_schools_not_received_sub, NULL as total_schools_sub from (select district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject, Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from pat_exception_grade_data_all where subject ='grade' group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject)as c inner join (select cluster_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by cluster_id,sg.grade)as d on c.cluster_id = d.cluster_id and c.grade=d.grade))as a)as s group by s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade "
    },
    {
        "pat_exception_grade_school_all": "select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade, sum(s.Total_schools_with_missing_data) as Total_schools_with_missing_data,sum(s.total_schools) as total_schools, round(cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(case when total_schools=0 then NULL else total_schools end) as numeric),1)*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub, 'total_schools_with_missing_data', Total_schools_with_missing_data_sub))) as subjects from ((select distinct school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,subject, 0 as  Total_schools_with_missing_data,0 as total_schools, Count(DISTINCT(school_id)) AS Total_schools_with_missing_data_sub,Count(DISTINCT(school_id)) AS total_schools_sub from pat_exception_grade_data_all where subject!='grade' group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,grade,subject) union (select distinct school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade, 'grade' as subject, Count(DISTINCT(school_id)) AS Total_schools_with_missing_data, cast(Count(DISTINCT(school_id)) as numeric)AS total_schools,0 as Total_schools_with_missing_data_sub,0 as total_schools_sub from pat_exception_grade_data_all where subject ='grade' group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,grade))as s group by school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade "
    },
    {
        "pat_exception_grade_district_last_7_days": "select s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade, sum(Total_schools_with_missing_data) as Total_schools_with_missing_data,sum(total_schools) as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', s.total_schools_sub,'total_schools_with_missing_data', s.total_schools_not_received_sub, 'percentage_schools_with_missing_data',s.percentage_schools_with_missing_data))) as subjects from (select a.district_latitude,a.district_longitude,a.district_id,a.district_name,a.grade,a.subject,a.total_schools, a.total_schools_not_received as Total_schools_with_missing_data,a.total_schools_sub,a.total_schools_not_received_sub, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data from (( select a.district_id,district_name,district_latitude,district_longitude,a.grade,a.subject,0 as total_schools_not_received,NULL as total_schools,total_schools_not_received_sub,total_schools_sub from(select district_id,district_name,district_latitude,district_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from pat_exception_grade_data_last7 where subject !='grade' group by district_id,district_name,district_latitude,district_longitude,grade,subject) as a inner join  (select district_id,count(distinct(shd.school_id)) as total_schools_sub,concat ('Grade ',sg.grade) as grade,subject from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  inner join subject_details sd on  sg.grade=sd.grade group by district_id,sg.grade,sd.subject) as b on a.district_id=b.district_id and a.grade=b.grade  and a.subject=b.subject) union (select c.district_id,district_name,district_latitude,district_longitude,c.grade,subject,total_schools_with_missing_data_grade as total_schools_not_received, total_schools ,0 as total_schools_not_received_sub, NULL  as total_schools_sub from(select district_id,district_name,district_latitude,district_longitude,grade,subject,Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from pat_exception_grade_data_last7 where trim(subject) ='grade' group by district_id,district_name,district_latitude,district_longitude,grade,subject)as c inner join (select district_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by district_id,sg.grade)as d on c.district_id = d.district_id and c.grade=d.grade))as a)as s group by s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade order by district_id "
    },
    {
        "pat_exception_grade_block_last_7_days": "select s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', Total_schools_with_missing_data_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from ( select a.block_latitude,a.block_longitude,a.district_id, a.district_name,a.block_id,a.block_name,a.grade,a.subject,a.total_schools,a.total_schools_not_received as Total_schools_with_missing_data, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data,total_schools_sub,total_schools_not_received_sub  as Total_schools_with_missing_data_sub from ((select district_id,district_name,a.block_id,block_name,block_latitude,block_longitude,a.grade,subject,0 as total_schools_not_received,NULL as total_schools,total_schools_not_received_sub,total_schools_sub from(select district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from pat_exception_grade_data_last7 where subject !='grade' group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject) as a inner join  (select block_id,count(distinct(shd.school_id)) as total_schools_sub,concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by block_id,sg.grade) as b on a.block_id = b.block_id and a.grade=b.grade) union (select district_id,district_name,c.block_id,block_name,block_latitude,block_longitude,c.grade,subject,total_schools_with_missing_data_grade as total_schools_not_received, total_schools,0 as total_schools_not_received_sub, NULL  as total_schools_sub from(select district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject, Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from pat_exception_grade_data_last7 where subject ='grade' group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject)as c inner join (select block_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by block_id,sg.grade)as d on c.block_id = d.block_id and c.grade=d.grade))as a)as s group by s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade  order by block_id "
    },
    {
        "pat_exception_grade_cluster_last_7_days": "select s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools',total_schools_sub,'total_schools_with_missing_data', Total_schools_with_missing_data_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.cluster_id,a.cluster_name,a.grade,a.subject,a.total_schools, a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data,total_schools_not_received_sub as Total_schools_with_missing_data_sub,total_schools_sub from ((select district_id,district_name,block_id,block_name,a.cluster_id,cluster_name,cluster_latitude,cluster_longitude,a.grade,subject,0 as total_schools_not_received,NULL as total_schools,total_schools_not_received_sub,total_schools_sub from(select district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from pat_exception_grade_data_last7 where subject !='grade' group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject) as a inner join (select cluster_id,count(distinct(shd.school_id)) as total_schools_sub,concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by cluster_id,sg.grade) as b on a.cluster_id = b.cluster_id and a.grade=b.grade) union (select district_id,district_name,block_id,block_name,c.cluster_id,cluster_name,cluster_latitude,cluster_longitude,c.grade,subject, total_schools_with_missing_data_grade as total_schools_not_received,total_schools, 0 as total_schools_not_received_sub, NULL as total_schools_sub from (select district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject, Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from pat_exception_grade_data_last7 where subject ='grade' group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject)as c inner join (select cluster_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by cluster_id,sg.grade)as d on c.cluster_id = d.cluster_id and c.grade=d.grade))as a)as s group by s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade "
    },
    {
        "pat_exception_grade_school_last_7_days": "select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade, sum(s.Total_schools_with_missing_data) as Total_schools_with_missing_data,sum(s.total_schools) as total_schools, round(cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(case when total_schools=0 then NULL else total_schools end) as numeric),1)*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub, 'total_schools_with_missing_data', Total_schools_with_missing_data_sub))) as subjects from ((select distinct school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,subject, 0 as  Total_schools_with_missing_data,0 as total_schools, Count(DISTINCT(school_id)) AS Total_schools_with_missing_data_sub,Count(DISTINCT(school_id)) AS total_schools_sub from pat_exception_grade_data_last7 where subject!='grade' group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,grade,subject) union (select distinct school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade, 'grade' as subject, Count(DISTINCT(school_id)) AS Total_schools_with_missing_data, cast(Count(DISTINCT(school_id)) as numeric)AS total_schools,0 as Total_schools_with_missing_data_sub,0 as total_schools_sub from pat_exception_grade_data_last7 where subject ='grade' group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,grade))as s group by school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade "
    },
    {
        "pat_exception_grade_district_last_30_days": "select s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade, sum(Total_schools_with_missing_data) as Total_schools_with_missing_data,sum(total_schools) as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', s.total_schools_sub,'total_schools_with_missing_data', s.total_schools_not_received_sub, 'percentage_schools_with_missing_data',s.percentage_schools_with_missing_data))) as subjects from (select a.district_latitude,a.district_longitude,a.district_id,a.district_name,a.grade,a.subject,a.total_schools, a.total_schools_not_received as Total_schools_with_missing_data,a.total_schools_sub,a.total_schools_not_received_sub, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data from (( select a.district_id,district_name,district_latitude,district_longitude,a.grade,a.subject,0 as total_schools_not_received,NULL as total_schools,total_schools_not_received_sub,total_schools_sub from(select district_id,district_name,district_latitude,district_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from pat_exception_grade_data_last30 where subject !='grade' group by district_id,district_name,district_latitude,district_longitude,grade,subject) as a inner join  (select district_id,count(distinct(shd.school_id)) as total_schools_sub,concat ('Grade ',sg.grade) as grade,subject from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  inner join subject_details sd on  sg.grade=sd.grade group by district_id,sg.grade,sd.subject) as b on a.district_id=b.district_id and a.grade=b.grade  and a.subject=b.subject) union (select c.district_id,district_name,district_latitude,district_longitude,c.grade,subject,total_schools_with_missing_data_grade as total_schools_not_received, total_schools ,0 as total_schools_not_received_sub, NULL  as total_schools_sub from(select district_id,district_name,district_latitude,district_longitude,grade,subject,Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from pat_exception_grade_data_last30 where trim(subject) ='grade' group by district_id,district_name,district_latitude,district_longitude,grade,subject)as c inner join (select district_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by district_id,sg.grade)as d on c.district_id = d.district_id and c.grade=d.grade))as a)as s group by s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade order by district_id "
    },
    {
        "pat_exception_grade_block_last_30_days": "select s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', Total_schools_with_missing_data_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from ( select a.block_latitude,a.block_longitude,a.district_id, a.district_name,a.block_id,a.block_name,a.grade,a.subject,a.total_schools,a.total_schools_not_received as Total_schools_with_missing_data, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data,total_schools_sub,total_schools_not_received_sub  as Total_schools_with_missing_data_sub from ((select district_id,district_name,a.block_id,block_name,block_latitude,block_longitude,a.grade,subject,0 as total_schools_not_received,NULL as total_schools,total_schools_not_received_sub,total_schools_sub from(select district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from pat_exception_grade_data_last30 where subject !='grade' group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject) as a inner join  (select block_id,count(distinct(shd.school_id)) as total_schools_sub,concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by block_id,sg.grade) as b on a.block_id = b.block_id and a.grade=b.grade) union (select district_id,district_name,c.block_id,block_name,block_latitude,block_longitude,c.grade,subject,total_schools_with_missing_data_grade as total_schools_not_received, total_schools,0 as total_schools_not_received_sub, NULL  as total_schools_sub from(select district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject, Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from pat_exception_grade_data_last30 where subject ='grade' group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject)as c inner join (select block_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by block_id,sg.grade)as d on c.block_id = d.block_id and c.grade=d.grade))as a)as s group by s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade  order by block_id "
    },
    {
        "pat_exception_grade_cluster_last_30_days": "select s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools',total_schools_sub,'total_schools_with_missing_data', Total_schools_with_missing_data_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.cluster_id,a.cluster_name,a.grade,a.subject,a.total_schools, a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data,total_schools_not_received_sub as Total_schools_with_missing_data_sub,total_schools_sub from ((select district_id,district_name,block_id,block_name,a.cluster_id,cluster_name,cluster_latitude,cluster_longitude,a.grade,subject,0 as total_schools_not_received,NULL as total_schools,total_schools_not_received_sub,total_schools_sub from(select district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from pat_exception_grade_data_last30 where subject !='grade' group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject) as a inner join (select cluster_id,count(distinct(shd.school_id)) as total_schools_sub,concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by cluster_id,sg.grade) as b on a.cluster_id = b.cluster_id and a.grade=b.grade) union (select district_id,district_name,block_id,block_name,c.cluster_id,cluster_name,cluster_latitude,cluster_longitude,c.grade,subject, total_schools_with_missing_data_grade as total_schools_not_received,total_schools, 0 as total_schools_not_received_sub, NULL as total_schools_sub from (select district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject, Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from pat_exception_grade_data_last30 where subject ='grade' group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject)as c inner join (select cluster_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by cluster_id,sg.grade)as d on c.cluster_id = d.cluster_id and c.grade=d.grade))as a)as s group by s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade "
    },
    {
        "pat_exception_grade_school_last_30_days": "select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade, sum(s.Total_schools_with_missing_data) as Total_schools_with_missing_data,sum(s.total_schools) as total_schools, round(cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(case when total_schools=0 then NULL else total_schools end) as numeric),1)*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub, 'total_schools_with_missing_data', Total_schools_with_missing_data_sub))) as subjects from ((select distinct school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,subject, 0 as  Total_schools_with_missing_data,0 as total_schools, Count(DISTINCT(school_id)) AS Total_schools_with_missing_data_sub,Count(DISTINCT(school_id)) AS total_schools_sub from pat_exception_grade_data_last30 where subject!='grade' group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,grade,subject) union (select distinct school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade, 'grade' as subject, Count(DISTINCT(school_id)) AS Total_schools_with_missing_data, cast(Count(DISTINCT(school_id)) as numeric)AS total_schools,0 as Total_schools_with_missing_data_sub,0 as total_schools_sub from pat_exception_grade_data_last30 where subject ='grade' group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,grade))as s group by school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade "
    }
]